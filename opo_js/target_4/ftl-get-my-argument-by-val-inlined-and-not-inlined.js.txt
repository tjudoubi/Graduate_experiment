(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable i))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression i)) ])) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( (formalParameterList (formalParameterArg (assignable i))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression i)) ])) , (arrayElement (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression i)) , (argument (singleExpression (literal "one"))) , (argument (singleExpression (literal (numericLiteral 2)))) , (argument (singleExpression (literal "three"))) )))) , (arrayElement (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression i)) ]))) ]))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function arraycmp ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName length)) != (singleExpression (singleExpression b) . (identifierName length)))) ) (statement (returnStatement return (expressionSequence (singleExpression (literal false))) (eos ;)))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression a) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression i)) ]) != (singleExpression (singleExpression b) [ (expressionSequence (singleExpression i)) ]))) ) (statement (returnStatement return (expressionSequence (singleExpression (literal false))) (eos ;)))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable thingies) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) , (arrayElement (singleExpression (literal "one"))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal "three")))) ])))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable otherThingies) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) , (arrayElement (singleExpression (literal "five"))) , (arrayElement (singleExpression (literal (numericLiteral 6)))) , (arrayElement (singleExpression (literal "seven")))) ])))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) , (argument (singleExpression (literal "five"))) , (argument (singleExpression (literal (numericLiteral 6)))) , (argument (singleExpression (literal "seven"))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression (singleExpression arraycmp) (arguments ( (argument (singleExpression result)) , (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression otherThingies) [ (expressionSequence (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) ])) , (arrayElement (singleExpression (singleExpression thingies) [ (expressionSequence (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) ])) , (arrayElement (singleExpression (singleExpression otherThingies) [ (expressionSequence (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 4))))) ]))) ]))) ))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: bad result for i = ")) + (singleExpression i)) + (singleExpression (literal ": "))) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)