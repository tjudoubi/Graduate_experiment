(program (sourceElements (sourceElement (statement (functionDeclaration function testRegExp ( (formalParameterList (formalParameterArg (assignable regexpExpression))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression regexpExpression)) ))))) (eos ;))) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (literal "Expected \"")) + (singleExpression regexpExpression)) + (singleExpression (literal "\" to throw and it didn't")))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression e) != (singleExpression (literal "SyntaxError: Invalid regular expression: pattern exceeds string length limits")))) ) (statement (throwStatement throw (expressionSequence (singleExpression e)) (eos ;))))) (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testRegExp) (arguments ( (argument (singleExpression (literal "/a{2147483649,2147483650}a{2147483649,2147483650}/.exec('aaaa')"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testRegExp) (arguments ( (argument (singleExpression (literal "/a{2147483649,2147483650}a{2147483649,2147483650}/.exec('aa')"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression testRegExp)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal /(?:\1{2147483649,2147483650})+/)) . (identifierName exec)) (arguments ( (argument (singleExpression (literal '123'))) )))) <missing ')'>) ");testRegExp(" /) eos))) (sourceElement (statement (expressionStatement (expressionSequence singleExpression () (eos [ ^ ])))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 2147483648))) , (singleExpression (literal (numericLiteral 2147483651)))) eos))) }))) (sourceElement (statement (expressionStatement (expressionSequence singleExpression) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( ? : . ))) (eos {)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 2)))) eos)))) } ) + ? /.exec('xxx')");testRegExp("/ ( \u0004 W\u0f0b + ? $ [ xa7 t t - \ue118 f ] { 2147483648 , 2147483648 } ) + . + ? /u.exec('testing')");testRegExp("/ ( . { 2147483649 , 2147483652 } ) + ? /g.exec('xxx')");testRegExp("/ ( ? : ( ? : [ D ] { 2147483649 } ) + ? . ) * ? /igmy.exec('123\\n123')");testRegExp("/ ( ? : 1 { 2147483648 , } ) + ? / m . exec ( 'xxx' ) ) ;)