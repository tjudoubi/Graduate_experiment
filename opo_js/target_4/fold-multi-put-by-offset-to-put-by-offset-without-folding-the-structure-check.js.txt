(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function fu ( (formalParameterList (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName e)) = (singleExpression (literal (numericLiteral 2))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( (formalParameterList (formalParameterArg (assignable f)) , (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression o)) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function baz ( (formalParameterList (formalParameterArg (assignable f)) , (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression o)) )))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 2)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 2)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName d)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 2)))) , (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 3)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fu) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 2)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fu) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 2)))) , (propertyAssignment (propertyName (identifierName g)) : (singleExpression (literal (numericLiteral 3)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fu) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName d)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 2)))) , (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 3)))) , (propertyAssignment (propertyName (identifierName g)) : (singleExpression (literal (numericLiteral 4)))) }))) )))) (eos ;)))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression foo)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 1)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { functionBody }))) , (argument (singleExpression (literal null))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))))) }))) , (argument (singleExpression (literal null))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression fu)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 1)))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { functionBody }))) , (argument (singleExpression (literal null))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))))) }))) , (argument (singleExpression (literal null))) )))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable f)) , (formalParameterArg (assignable g)) , (formalParameterArg (assignable o)) , (formalParameterArg (assignable p))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable n) = (singleExpression (literal (numericLiteral 1000000))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression n))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable q))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression i) == (singleExpression (singleExpression n) - (singleExpression (literal (numericLiteral 1)))))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression q) = (singleExpression p))) (eos ;))) else (statement (expressionStatement (expressionSequence (singleExpression (singleExpression q) = (singleExpression o))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression g)) , (argument (singleExpression q)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression f)) , (argument (singleExpression q)) )))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName e)) != (singleExpression (literal (numericLiteral 2))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad value in o.e: ")) + (singleExpression (singleExpression o) . (identifierName e)))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) != (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad value in o.f: ")) + (singleExpression (singleExpression o) . (identifierName f)))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression p) . (identifierName e)) != (singleExpression (literal (numericLiteral 2))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad value in p.e: ")) + (singleExpression (singleExpression p) . (identifierName e)))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression p) . (identifierName f)) != (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad value in p.f: ")) + (singleExpression (singleExpression p) . (identifierName f)))) (eos ;)))))))) }))) )) (arguments ( (argument (singleExpression foo)) , (argument (singleExpression fu)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 2)))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName e)) : (singleExpression (literal (numericLiteral 12)))) , (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 13)))) , (propertyAssignment (propertyName (identifierName g)) : (singleExpression (literal (numericLiteral 14)))) }))) )))) (eos ;))))) <EOF>)