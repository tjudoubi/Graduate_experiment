(program (sourceElements (sourceElement (statement (functionDeclaration function sink ( (formalParameterList (formalParameterArg (assignable p)) , (formalParameterArg (assignable q))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (anoymousFunction (arrowFunctionParameters x) => (arrowFunctionBody (singleExpression x)))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression p)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression q)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression g) . (identifierName inner)) = (singleExpression (literal (numericLiteral 42))))) (eos ;))))) (statement (returnStatement return (expressionSequence (singleExpression g)) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters x) => (arrowFunctionBody (singleExpression x))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression sink)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression sink) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal true))) ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: expected 42 but got ")) + (singleExpression result))) (eos ;)))))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression sink) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 12)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 12))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: expected 12 but got ")) + (singleExpression result))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression sink) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal true))) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression f) . (identifierName inner)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: inner should be 42 but is ")) + (singleExpression result))) (eos ;))))))) <EOF>)