(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression callerSourceOrigin) (arguments ( ))) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0))))) ])) . (identifierName map)) (arguments ( (argument (singleExpression callerSourceOrigin)) ))) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `callerSourceOrigin()`))) ))) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression ( (expressionSequence (singleExpression (literal (numericLiteral 0))) , (singleExpression eval)) )) (arguments ( (argument (singleExpression (literal `callerSourceOrigin()`))) ))) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression ( (expressionSequence (singleExpression new (singleExpression (singleExpression Function) (arguments ( (argument (singleExpression (literal `return callerSourceOrigin()`))) ))))) )) (arguments ( ))) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression Function) (arguments ( (argument (singleExpression (literal `return callerSourceOrigin()`))) )))) )) (arguments ( ))) . (identifierName endsWith)) (arguments ( (argument (singleExpression (literal 'source-origin.js'))) )))) , (argument (singleExpression (literal true))) )))) (eos ;))))) <EOF>)