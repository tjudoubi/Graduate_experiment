(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable GeneratorFunctionPrototype) = (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function * ( ) { functionBody }))) )) . (identifierName __proto__)))) (eos ;)))) (sourceElement (statement (functionDeclaration function sink ( (formalParameterList (formalParameterArg (assignable p)) , (formalParameterArg (assignable q))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (anoymousFunction function * ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression x)) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression p)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression q)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression OSRExit) (arguments ( )))) (eos ;))))) (statement (returnStatement return (expressionSequence (singleExpression g)) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (anoymousFunction function * ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression x)) (eos ;)))))) }))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression sink)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression sink) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression f) . (identifierName __proto__))) , (argument (singleExpression GeneratorFunctionPrototype)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression result) . (identifierName next)) (arguments ( ))) . (identifierName value)) != (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: expected 42 but got ")) + (singleExpression result))) (eos ;)))))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression sink) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal true))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression f) . (identifierName __proto__))) , (argument (singleExpression GeneratorFunctionPrototype)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression result) . (identifierName next)) (arguments ( ))) . (identifierName value)) != (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: expected 42 but got ")) + (singleExpression result))) (eos ;))))))) <EOF>)