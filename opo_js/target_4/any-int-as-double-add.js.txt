(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName push)) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1024))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) + (singleExpression i))) )))) (eos ;)))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName push)) (arguments ( (argument (singleExpression - (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1024))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) + (singleExpression i))) )))) )))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName push)) (arguments ( (argument (singleExpression (literal (numericLiteral 2251799813685248)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName push)) (arguments ( (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function test ( (formalParameterList (formalParameterArg (assignable array)) , (formalParameterArg (assignable index)) , (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression index)) ]) + (singleExpression (singleExpression fiatInt52) (arguments ( (argument (singleExpression value)) ))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression test)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable index) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression index) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression index))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression index)) , (argument (singleExpression (literal (numericLiteral 20)))) )))) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1024))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) + (singleExpression index)) + (singleExpression (literal (numericLiteral 20))))) )))) (eos ;))))) (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable index) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression index) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression ++ (singleExpression index))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (singleExpression index) + (singleExpression (literal (numericLiteral 100))))) , (argument (singleExpression (literal (numericLiteral 20)))) )))) , (argument (singleExpression (singleExpression - (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1024))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) * (singleExpression (literal (numericLiteral 1024)))) + (singleExpression index))) ))) + (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 200)))) , (argument (singleExpression (literal (numericLiteral 200)))) )))) , (argument (singleExpression (literal (numericLiteral 2251799813685448)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 201)))) , (argument (singleExpression (literal (numericLiteral 200)))) )))) , (argument (singleExpression (literal (numericLiteral 200.5)))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 201)))) , (argument (singleExpression (literal (numericLiteral 200)))) )))) , (argument (singleExpression (literal (numericLiteral 200.5)))) )))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 200)))) , (argument (singleExpression (literal (numericLiteral 200)))) )))) , (argument (singleExpression (literal (numericLiteral 2251799813685448)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression test) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 201)))) , (argument (singleExpression (literal (numericLiteral 200)))) )))) , (argument (singleExpression (literal (numericLiteral 200.5)))) )))) (eos ;))))) <EOF>)