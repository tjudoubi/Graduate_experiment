(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (literal "hello")) + (singleExpression x)) + (singleExpression (literal "!!")))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal " world"))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression typeof (singleExpression result)) != (singleExpression (literal "string")))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression describe) (arguments ( (argument (singleExpression result)) )))) (eos ;))) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result type: ")) + (singleExpression result))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal "hello world!!")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)