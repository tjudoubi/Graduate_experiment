(program (sourceElements (sourceElement (statement (functionDeclaration function bar ( ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression foo) . (identifierName arguments)) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression void (singleExpression (literal (numericLiteral 0)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: foo.arguments[0] should not be undefined but is."))) eos))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable p))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression effectful42) (arguments ( )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression i))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression p)) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable tmp) = (singleExpression arguments))) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression a)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal false))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 9))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)