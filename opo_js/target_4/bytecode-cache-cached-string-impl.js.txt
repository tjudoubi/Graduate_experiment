(program (sourceElements (sourceElement (statement (functionDeclaration function f ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName foo)) = (singleExpression (literal "foo")))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function g ( ) { (functionBody (sourceElements (sourceElement (statement (switchStatement switch ( (expressionSequence (singleExpression (literal 'foo'))) ) (caseBlock { (caseClauses (caseClause case (expressionSequence (singleExpression (literal "foo"))) : (statementList (statement (breakStatement break (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal "bar"))) :) (caseClause case (expressionSequence (singleExpression (literal "baz"))) :)) (defaultClause default : (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'Should have jumped to `foo`'))) ))))) (eos ;))) (statement (breakStatement break (eos ;))))) })))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;))))) <EOF>)