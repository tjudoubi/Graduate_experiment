(program (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v1) = (singleExpression (literal "AAAAAAAAAAA")))) (eos ;))) (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 27))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v1) = (singleExpression (singleExpression v1) + (singleExpression v1)))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v2))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v3) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) . (identifierName toString)) . (identifierName call)) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName source)) : (singleExpression v1)) , (propertyAssignment (propertyName (identifierName flags)) : (singleExpression v1)) }))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v3) (assignmentOperator +=) (singleExpression v1))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v2) (assignmentOperator +=) (singleExpression (singleExpression (singleExpression v3) . (identifierName localeCompare)) (arguments ( (argument (singleExpression v1)) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "Error: Out of memory")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED"))) (eos ;))))))) <EOF>)