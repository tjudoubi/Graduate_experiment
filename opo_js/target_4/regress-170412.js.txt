(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression arr) = (singleExpression new (singleExpression Array)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression arr)) , (argument (singleExpression (literal (numericLiteral 18)))) , (argument (singleExpression ( (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName writable)) : (singleExpression (literal true))) , (propertyAssignment (propertyName (identifierName configurable)) : (singleExpression (literal true))) }))) ))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 3))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName push)) . (identifierName apply)) (arguments ( (argument (singleExpression arr)) , (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal ""))) , (arrayElement (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { })))))) , (arrayElement (singleExpression (objectLiteral { })))) ]))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName sort)) . (identifierName apply)) (arguments ( (argument (singleExpression arr)) , (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression edenGC)) , (arrayElement (singleExpression (arrayLiteral [ elementList ])))) ]))) )))) (eos ;)))) })))))) <EOF>)