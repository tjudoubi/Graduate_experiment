(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression counter) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (classDeclaration class A (classTail { (classElement static (methodDefinition (setter set (propertyName (identifierName y))) ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression counter) ++) === (singleExpression (literal (numericLiteral 9))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression C) . (identifierName __proto__)) = (singleExpression B2))) (eos ;)))) }))))))) })) })))) (sourceElement (statement (classDeclaration class B1 (classTail extends (singleExpression A) { })))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression calledB2) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (classDeclaration class B2 (classTail extends (singleExpression A) { (classElement static (methodDefinition (setter set (propertyName (identifierName y))) ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression calledB2) = (singleExpression (literal true)))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class C (classTail extends (singleExpression B1) { })))) (sourceElement (statement (classDeclaration class D (classTail extends (singleExpression C) { })))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 11))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression D) . (identifierName y)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) }))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression calledB2))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'The setter for B2.y should have been called'))) ))))) (eos ;))))))) <EOF>)