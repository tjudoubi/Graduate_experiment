(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x0)) , (variableDeclaration (assignable x1)) , (variableDeclaration (assignable x2)) , (variableDeclaration (assignable x3)) , (variableDeclaration (assignable x4)) , (variableDeclaration (assignable x5)) , (variableDeclaration (assignable x6)) , (variableDeclaration (assignable x7)) , (variableDeclaration (assignable x8)) , (variableDeclaration (assignable x9)) , (variableDeclaration (assignable x10)) , (variableDeclaration (assignable x11)) , (variableDeclaration (assignable x12)) , (variableDeclaration (assignable x13))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable copy) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression this) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable p))) in (expressionSequence (singleExpression this)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression copy) [ (expressionSequence (singleExpression (singleExpression copy) . (identifierName length))) ]) = (singleExpression value))) (eos ;)))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 1))))) ; (expressionSequence (singleExpression (singleExpression j) ++)) ) (statement (block { })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName min)) (arguments ( (argument (singleExpression (singleExpression (literal (numericLiteral 0))) ** (singleExpression (arrayLiteral [ elementList ])))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array0) = (singleExpression new (singleExpression (singleExpression (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 3)))) ))) . (identifierName fill)) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression array0) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression ( (expressionSequence (singleExpression (arrayLiteral [ elementList ]))) )) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ]) = (singleExpression (literal (numericLiteral 0xFFFFF))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) . (identifierName call)) (arguments ( (argument (singleExpression array0)) )))) (eos ;))))))) <EOF>)