(program (sourceElements (sourceElement (statement (functionDeclaration function assertEq ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) != (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Expected: ")) + (singleExpression expected)) + (singleExpression (literal ", actual: "))) + (singleExpression actual))) ))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable arr)) , (formalParameterArg (assignable regexp)) , (formalParameterArg (assignable str))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression regexp) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName match))) ]) (arguments ( (argument (singleExpression str)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) = (singleExpression (literal (numericLiteral 3.54484805889626e-310))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression arr) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1.1)))) , (arrayElement (singleExpression (literal (numericLiteral 2.2)))) , (arrayElement (singleExpression (literal (numericLiteral 3.3))))) ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression regexp) = (singleExpression (literal /a/y)))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression arr)) , (argument (singleExpression regexp)) , (argument (singleExpression (literal "abcd"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression regexp) . (identifierName lastIndex)) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression arr))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))))) })))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression arr)) , (argument (singleExpression regexp)) , (argument (singleExpression (literal "abcd"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertEq) (arguments ( (argument (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) , (argument (singleExpression (literal "3.54484805889626e-310"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertEq) (arguments ( (argument (singleExpression result)) , (argument (singleExpression (literal ",3.54484805889626e-310,3.3"))) )))) (eos ;))))) <EOF>)