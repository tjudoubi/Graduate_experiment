(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable assertion))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression typeof (singleExpression assertion)) != (singleExpression (literal "string")))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Invalid assertion."))) ))))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression assertion)) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Bad assertion: ")) + (singleExpression assertion))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression get) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSet) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (functionDeclaration function resetTracking ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression get) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSet) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getProxyNullExec) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName exec)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal null))) (eos ;)))))) }))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression get) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ])) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resetTracking) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) . (identifierName call)) (arguments ( (argument (singleExpression getProxyNullExec)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'get == "global,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSetProxyNullExec) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName exec)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal null))) (eos ;)))))) }))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression get) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ])) (eos ;)))))) }))) , (propertyAssignment (propertyName (identifierName set)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ]) = (singleExpression v))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSetProxyNullExec) . (identifierName global)) = (singleExpression (literal true)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resetTracking) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) . (identifierName call)) (arguments ( (argument (singleExpression getSetProxyNullExec)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'get == "global,unicode,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'getSet == "global,unicode,lastIndex,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression regExpGlobal_comma) = (singleExpression new (singleExpression (singleExpression RegExp) (arguments ( (argument (singleExpression (literal ","))) , (argument (singleExpression (literal "g"))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSetProxyMatches_comma) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName exec)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable string))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression regExpGlobal_comma) . (identifierName exec)) (arguments ( (argument (singleExpression string)) )))) (eos ;)))))) }))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression get) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ])) (eos ;)))))) }))) , (propertyAssignment (propertyName (identifierName set)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ]) = (singleExpression v))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSetProxyMatches_comma) . (identifierName global)) = (singleExpression (literal true)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resetTracking) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression replaceResult) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) . (identifierName call)) (arguments ( (argument (singleExpression getSetProxyMatches_comma)) , (argument (singleExpression (literal "John,,Doe,121 Main St.,Anytown"))) , (argument (singleExpression (literal ":"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'replaceResult == "John::Doe:121 Main St.:Anytown"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'get == "global,unicode,exec,exec,exec,exec,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'getSet == "global,unicode,lastIndex,exec,exec,exec,exec,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression regExp_phoneNumber) = (singleExpression new (singleExpression (singleExpression RegExp) (arguments ( (argument (singleExpression (literal "(\\d{3})(\\d{3})(\\d{4})"))) , (argument (singleExpression (literal ""))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSetProxyReplace_phoneNumber) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName exec)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable string))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression regExp_phoneNumber) . (identifierName exec)) (arguments ( (argument (singleExpression string)) )))) (eos ;)))))) }))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression get) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression k) . (identifierName toString)) (arguments ( ))) == (singleExpression (literal "lastIndex")))) ) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression regExpGlobal_phoneNumber) . (identifierName lastIndex))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ])) (eos ;)))))) }))) , (propertyAssignment (propertyName (identifierName set)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression k) . (identifierName toString)) (arguments ( ))) == (singleExpression (literal "lastIndex")))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression regExp_phoneNumber) . (identifierName lastIndex)) = (singleExpression v))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ]) = (singleExpression v))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resetTracking) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression replaceResult) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) . (identifierName call)) (arguments ( (argument (singleExpression getSetProxyReplace_phoneNumber)) , (argument (singleExpression (literal "8005551212"))) , (argument (singleExpression (literal "$1-$2-$3"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'replaceResult == "800-555-1212"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'get == "global,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'getSet == "global,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression regExpGlobalUnicode_digit_nonGreedy) = (singleExpression new (singleExpression (singleExpression RegExp) (arguments ( (argument (singleExpression (literal "\\d{0,1}"))) , (argument (singleExpression (literal "gu"))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSetProxyReplaceUnicode_digit_nonGreedy) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName exec)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable string))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression regExpGlobalUnicode_digit_nonGreedy) . (identifierName exec)) (arguments ( (argument (singleExpression string)) )))) (eos ;)))))) }))) }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression get) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression k) . (identifierName toString)) (arguments ( ))) == (singleExpression (literal "lastIndex")))) ) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression regExpGlobalUnicode_digit_nonGreedy) . (identifierName lastIndex))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ])) (eos ;)))))) }))) , (propertyAssignment (propertyName (identifierName set)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSet) . (identifierName push)) (arguments ( (argument (singleExpression k)) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression k) . (identifierName toString)) (arguments ( ))) == (singleExpression (literal "lastIndex")))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression regExpGlobalUnicode_digit_nonGreedy) . (identifierName lastIndex)) = (singleExpression v))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression k)) ]) = (singleExpression v))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSetProxyReplaceUnicode_digit_nonGreedy) . (identifierName global)) = (singleExpression (literal true)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression getSetProxyReplaceUnicode_digit_nonGreedy) . (identifierName unicode)) = (singleExpression (literal true)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resetTracking) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression replaceResult) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression RegExp) . (identifierName prototype)) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) . (identifierName call)) (arguments ( (argument (singleExpression getSetProxyReplaceUnicode_digit_nonGreedy)) , (argument (singleExpression (literal "12X3\u{10400}4"))) , (argument (singleExpression (literal "[$&]"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'replaceResult == "[1][2][]X[3][]\u{10400}[4][]"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'get == "global,unicode,exec,exec,exec,lastIndex,exec,exec,lastIndex,exec,exec,lastIndex,exec"'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal 'getSet == "global,unicode,lastIndex,exec,exec,exec,lastIndex,lastIndex,exec,exec,lastIndex,lastIndex,exec,exec,lastIndex,lastIndex,exec"'))) )))) (eos ;))))) <EOF>)