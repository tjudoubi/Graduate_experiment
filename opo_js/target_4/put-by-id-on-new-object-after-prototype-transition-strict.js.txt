(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) eos))) (sourceElement (statement (functionDeclaration function opaqueNewObject ( (formalParameterList (formalParameterArg (assignable prototype))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName create)) (arguments ( (argument (singleExpression prototype)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueNewObject)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function putValueOnNewObject ( (formalParameterList (formalParameterArg (assignable value)) , (formalParameterArg (assignable prototype))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable object) = (singleExpression (singleExpression opaqueNewObject) (arguments ( (argument (singleExpression prototype)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName myProperty)) = (singleExpression value))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression object)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression putValueOnNewObject)) )))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable initialPrototype) = (singleExpression new (singleExpression Object)))) (eos ;))) (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 5))))) ; (expressionSequence (singleExpression ++ (singleExpression j))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable object) = (singleExpression (singleExpression putValueOnNewObject) (arguments ( (argument (singleExpression j)) , (argument (singleExpression initialPrototype)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression object) [ (expressionSequence (singleExpression (literal "myProperty"))) ]) !== (singleExpression j))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Ooops, we mess up before the prototype change at iteration i = ")) + (singleExpression i)) + (singleExpression (literal " j = "))) + (singleExpression j))) (eos ;)))) }))))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression initialPrototype) . (identifierName foo)) = (singleExpression (literal "bar")))) (eos ;))) (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 5))))) ; (expressionSequence (singleExpression ++ (singleExpression j))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable object) = (singleExpression (singleExpression putValueOnNewObject) (arguments ( (argument (singleExpression j)) , (argument (singleExpression initialPrototype)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression object) [ (expressionSequence (singleExpression (literal "myProperty"))) ]) !== (singleExpression j))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Ooops, we mess up at iteration i = ")) + (singleExpression i)) + (singleExpression (literal " j = "))) + (singleExpression j))) (eos ;)))) }))))) }))))) })))))) <EOF>)