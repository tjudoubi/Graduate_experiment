(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable c)) , (formalParameterArg (assignable d)) , (formalParameterArg (assignable e)) , (formalParameterArg (assignable f)) , (formalParameterArg (assignable g)) , (formalParameterArg (assignable h)) , (formalParameterArg (assignable i)) , (formalParameterArg (assignable j)) , (formalParameterArg (assignable k)) , (formalParameterArg (assignable l)) , (formalParameterArg (assignable m)) , (formalParameterArg (assignable n)) , (formalParameterArg (assignable o)) , (formalParameterArg (assignable p)) , (formalParameterArg (assignable q)) , (formalParameterArg (assignable r)) , (formalParameterArg (assignable s)) , (formalParameterArg (assignable t)) , (formalParameterArg (assignable u)) , (formalParameterArg (assignable v)) , (formalParameterArg (assignable w)) , (formalParameterArg (assignable x)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression a) * (singleExpression (literal (numericLiteral 2)))) + (singleExpression (singleExpression b) * (singleExpression (literal (numericLiteral 3))))) + (singleExpression (singleExpression c) * (singleExpression (literal (numericLiteral 5))))) + (singleExpression (singleExpression d) * (singleExpression (literal (numericLiteral 7))))) + (singleExpression (singleExpression e) * (singleExpression (literal (numericLiteral 11))))) + (singleExpression (singleExpression f) * (singleExpression (literal (numericLiteral 13))))) + (singleExpression (singleExpression g) * (singleExpression (literal (numericLiteral 17))))) + (singleExpression (singleExpression h) * (singleExpression (literal (numericLiteral 19))))) + (singleExpression (singleExpression i) * (singleExpression (literal (numericLiteral 23))))) + (singleExpression (singleExpression j) * (singleExpression (literal (numericLiteral 29))))) + (singleExpression (singleExpression k) * (singleExpression (literal (numericLiteral 31))))) + (singleExpression (singleExpression l) * (singleExpression (literal (numericLiteral 37))))) + (singleExpression (singleExpression m) * (singleExpression (literal (numericLiteral 41))))) + (singleExpression (singleExpression n) * (singleExpression (literal (numericLiteral 43))))) + (singleExpression (singleExpression o) * (singleExpression (literal (numericLiteral 47))))) + (singleExpression (singleExpression p) * (singleExpression (literal (numericLiteral 53))))) + (singleExpression (singleExpression q) * (singleExpression (literal (numericLiteral 59))))) + (singleExpression (singleExpression r) * (singleExpression (literal (numericLiteral 61))))) + (singleExpression (singleExpression s) * (singleExpression (literal (numericLiteral 67))))) + (singleExpression (singleExpression t) * (singleExpression (literal (numericLiteral 71))))) + (singleExpression (singleExpression u) * (singleExpression (literal (numericLiteral 73))))) + (singleExpression (singleExpression v) * (singleExpression (literal (numericLiteral 79))))) + (singleExpression (singleExpression w) * (singleExpression (literal (numericLiteral 83))))) + (singleExpression (singleExpression x) * (singleExpression (literal (numericLiteral 89))))) + (singleExpression (singleExpression y) * (singleExpression (literal (numericLiteral 97)))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression foo) . (identifierName apply)) (arguments ( (argument (singleExpression this)) , (argument (singleExpression arguments)) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function baz ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (numericLiteral 2)))) , (argument (singleExpression (literal (numericLiteral 3)))) , (argument (singleExpression (literal (numericLiteral 4)))) , (argument (singleExpression (literal (numericLiteral 5)))) , (argument (singleExpression (literal (numericLiteral 6)))) , (argument (singleExpression (literal (numericLiteral 7)))) , (argument (singleExpression (literal (numericLiteral 8)))) , (argument (singleExpression (literal (numericLiteral 9)))) , (argument (singleExpression (literal (numericLiteral 10)))) , (argument (singleExpression (literal (numericLiteral 11)))) , (argument (singleExpression (literal (numericLiteral 12)))) , (argument (singleExpression (literal (numericLiteral 13)))) , (argument (singleExpression (literal (numericLiteral 14)))) , (argument (singleExpression (literal (numericLiteral 15)))) , (argument (singleExpression (literal (numericLiteral 16)))) , (argument (singleExpression (literal (numericLiteral 17)))) , (argument (singleExpression (literal (numericLiteral 18)))) , (argument (singleExpression (literal (numericLiteral 19)))) , (argument (singleExpression (literal (numericLiteral 20)))) , (argument (singleExpression (literal (numericLiteral 21)))) , (argument (singleExpression (literal (numericLiteral 22)))) , (argument (singleExpression (literal (numericLiteral 23)))) , (argument (singleExpression (literal (numericLiteral 24)))) , (argument (singleExpression (literal (numericLiteral 25)))) ))) + (singleExpression x))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression baz)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (singleExpression (literal (numericLiteral 21586))) - (singleExpression (singleExpression (literal (numericLiteral 26))) * (singleExpression (literal (numericLiteral 101))))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression baz) (arguments ( (argument (singleExpression (literal (numericLiteral 2147483646)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 2147502606))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)