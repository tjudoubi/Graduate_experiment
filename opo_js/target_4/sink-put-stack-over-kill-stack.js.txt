(program (sourceElements (sourceElement (statement (functionDeclaration function * avocado_1 ( ) { functionBody }))) (sourceElement (statement (functionDeclaration function apricot_0 ( (formalParameterList (formalParameterArg (assignable alpaca_0))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression alpaca_0)) ) (statement (block { }))))))) }))) (sourceElement (statement (classDeclaration class __c_0 (classTail extends (singleExpression (literal null)) { })))) (sourceElement (statement (functionDeclaration function banana_2 ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression apricot_0) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression avocado_1) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (literal null)))))) )))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression banana_2) (arguments ( )))) (eos ;)))) })))) <EOF>)