(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName defineProperties)) : (singleExpression Object)) })))) (eos ;)))) (sourceElement (statement (functionDeclaration function opt ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName __proto__)) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression Object)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName ownKeys)) : (singleExpression opt)) }))) )))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ elementList ]))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 400))))) ; (expressionSequence (singleExpression (singleExpression i) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 1)))))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable prop) = (singleExpression (literal null)))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable count) = (singleExpression (literal (numericLiteral 0))))) (eos ;))) (statement (iterationStatement for ( (singleExpression t) in (expressionSequence (singleExpression a)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression opt) (arguments ( )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression prop) = (singleExpression t))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression count))) (eos ;)))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression prop)) , (argument (singleExpression (literal "defineProperties"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression count)) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) })))))) <EOF>)