(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable d))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Date) . (identifierName prototype)) . (identifierName getTimezoneOffset)) . (identifierName call)) (arguments ( (argument (singleExpression d)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable count) = (singleExpression (literal (numericLiteral 100000))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression count))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (singleExpression (singleExpression i) < (singleExpression (singleExpression count) - (singleExpression (literal (numericLiteral 1000))))) ? (singleExpression new (singleExpression (singleExpression Date) (arguments ( )))) : (singleExpression (literal "a")))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (literal false)))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (literal true)))) (eos ;)))) }))))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression x))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "bad result: ")) + (singleExpression x))) (eos ;))))))) <EOF>)