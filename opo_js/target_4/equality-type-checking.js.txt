(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) (eos ;)))) (sourceElement (statement (functionDeclaration function Foo ( ) { functionBody }))) (sourceElement (statement (functionDeclaration function checkStrictEq ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) === (singleExpression b))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression checkStrictEq)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function checkStrictEqOther ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) === (singleExpression b))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression checkStrictEqOther)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression new (singleExpression (singleExpression Foo) (arguments ( )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable address) = (singleExpression (singleExpression addressOf) (arguments ( (argument (singleExpression foo)) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression address) === (singleExpression undefined))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: address should not be undefined"))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression foo) === (singleExpression address)) || (singleExpression (singleExpression address) === (singleExpression foo)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: an address should not be equal to it's object"))) (eos ;)))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression checkStrictEq) (arguments ( (argument (singleExpression foo)) , (argument (singleExpression address)) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: an address should not be equal to it's object"))) (eos ;))))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression checkStrictEqOther) (arguments ( (argument (singleExpression address)) , (argument (singleExpression foo)) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: an address should not be equal to it's object"))) (eos ;)))))) })))))) <EOF>)