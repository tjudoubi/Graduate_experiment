(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function inlineTarget ( (formalParameterList (formalParameterArg (assignable arg1)) , (formalParameterArg (assignable arg2)) , (formalParameterArg (assignable arg3)) , (formalParameterArg (assignable arg4)) , (formalParameterArg (assignable arg5))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression arg1)) , (arrayElement (singleExpression arg2)) , (arrayElement (singleExpression arg3)) , (arrayElement (singleExpression arg4)) , (arrayElement (singleExpression arg5))) ]))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( )))) )))) , (argument (singleExpression (literal `[null,null,null,null,null]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) )))) , (argument (singleExpression (literal `[42,null,null,null,null]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) )))) )))) , (argument (singleExpression (literal `[42,43,null,null,null]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) , (argument (singleExpression (literal (numericLiteral 44)))) )))) )))) , (argument (singleExpression (literal `[42,43,44,null,null]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) , (argument (singleExpression (literal (numericLiteral 44)))) , (argument (singleExpression (literal (numericLiteral 45)))) )))) )))) , (argument (singleExpression (literal `[42,43,44,45,null]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) , (argument (singleExpression (literal (numericLiteral 44)))) , (argument (singleExpression (literal (numericLiteral 45)))) , (argument (singleExpression (literal (numericLiteral 46)))) )))) )))) , (argument (singleExpression (literal `[42,43,44,45,46]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) , (argument (singleExpression (literal (numericLiteral 44)))) , (argument (singleExpression (literal (numericLiteral 45)))) , (argument (singleExpression (literal (numericLiteral 46)))) , (argument (singleExpression (literal (numericLiteral 47)))) )))) )))) , (argument (singleExpression (literal `[42,43,44,45,46]`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression inlineTarget) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) , (argument (singleExpression (literal (numericLiteral 43)))) , (argument (singleExpression (literal (numericLiteral 44)))) , (argument (singleExpression (literal (numericLiteral 45)))) , (argument (singleExpression (literal (numericLiteral 46)))) , (argument (singleExpression (literal (numericLiteral 47)))) , (argument (singleExpression (literal (numericLiteral 48)))) )))) )))) , (argument (singleExpression (literal `[42,43,44,45,46]`))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression test)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 3e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( )))) (eos ;))))))) <EOF>)