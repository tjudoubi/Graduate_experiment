(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression a))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Bad assertion"))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function assertThrowSyntaxError ( (formalParameterList (formalParameterArg (assignable input))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression input)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression SyntaxError))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (functionDeclaration function assertThrowRangeError ( (formalParameterList (formalParameterArg (assignable input))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression input)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression RangeError))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (functionDeclaration function assertThrowTypeError ( (formalParameterList (formalParameterArg (assignable input))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression input)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression TypeError))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal ""))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "+0"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-0"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "  0"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "  0  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "00000"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression giantTrailingString) = (singleExpression (literal "0")))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression giantTrailingString) (assignmentOperator +=) (singleExpression (literal " ")))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression giantTrailingString)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0b1111"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "15")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0b10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "2")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0b10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "2")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression binaryString) = (singleExpression (literal "0b1")))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 128))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression binaryString) (assignmentOperator +=) (singleExpression (literal "0")))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression binaryString)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "340282366920938463463374607431768211456")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0B1111"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "15")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0B10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "2")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0B10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "2")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression binaryString) = (singleExpression (literal "0B1")))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 128))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression binaryString) (assignmentOperator +=) (singleExpression (literal "0")))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression binaryString)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "340282366920938463463374607431768211456")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0o7"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "7")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0o10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "8")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0o20"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "   0o20"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "   0o20  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0O7"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "7")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0O10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "8")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0O20"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "   0O20"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "   0O20  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "16")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0xa"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "10")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "0xff"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "255")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "  0xff  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "255")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "  0xfabc  "))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "64188")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal (numericLiteral 3245)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "3245")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 2147483648))))) ))))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "-2147483648")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 46781))))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "-46781")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal (numericLiteral 4503599627370490)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "4503599627370490")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 4503599627370490))))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "-4503599627370490")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 4503599627370496))))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "-4503599627370496")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal true))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "1")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal false))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "0")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 3)))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "3")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "54"))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "54")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "5489543"))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "5489543")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 135489543)))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "135489543")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 3256)))) (eos ;)))))) }))) , (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "563737"))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression n) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "3256")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "aba"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "-0x1"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "-0XFFab"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "0o78"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "0oa"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "000 12"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "0o"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "0b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "0x"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "00o"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "00b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowSyntaxError) (arguments ( (argument (singleExpression (literal "00x"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowTypeError) (arguments ( (argument (singleExpression (literal null))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowTypeError) (arguments ( (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowTypeError) (arguments ( (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal "a"))) )))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral .5))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression (literal (numericLiteral 9007199254740992)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression Infinity)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression - (singleExpression Infinity))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression NaN)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "MyError"))) ))))) (eos ;)))))) }))) })))) eos))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression o)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression e) . (identifierName message)) === (singleExpression (literal "MyError")))) )))) (eos ;)))) }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression BigInt) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression TypeError))) )))) (eos ;)))) })))))) <EOF>)