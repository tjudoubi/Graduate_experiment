(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression map) = (singleExpression new (singleExpression (singleExpression Map) (arguments ( )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression count) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (functionDeclaration function outer ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression count))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression count) >= (singleExpression (literal (numericLiteral 5))))) ) (statement (returnStatement return (eos ;)))))) (sourceElement (statement (functionDeclaration function inner ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function getPrototypeOf ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression outer) (arguments ( ))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal null))) (eos ;)))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable handler) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName getPrototypeOf)) : (singleExpression getPrototypeOf)) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable p) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression map)) , (argument (singleExpression handler)) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression map) . (identifierName __proto__)) = (singleExpression p))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression inner) (arguments ( ))))) (eos ;)))))) }))) (sourceElement (statement (tryStatement try (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression inner) (arguments ( ))))) (eos ;)))) }) (catchProduction catch (block { }))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression outer) (arguments ( ))))) (eos ;))))) <EOF>)