(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName sameValue)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable i)) , (formalParameterArg (assignable e)) , (formalParameterArg (assignable m))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression i) !== (singleExpression e))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression m)) ))))) (eos ;)))))))) }))) })))) eos))) (sourceElement (statement (functionDeclaration function bigIntRShift ( (formalParameterList (formalParameterArg (assignable x)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression x) >> (singleExpression y))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bigIntRShift)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (literal (bigintLiteral 4n))))))) })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression (literal (bigintLiteral 0b10001n)))) , (argument (singleExpression o)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression (singleExpression (literal (bigintLiteral 0b10001n))) + (singleExpression (literal " >> {valueOf: () => 4n} = "))) + (singleExpression r))) )))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (literal (bigintLiteral 0b10000n))))))) })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression o2)) , (argument (singleExpression o)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression (literal "{valueOf: () => 0b10000n} >> {valueOf: () => 4n}  = ")) + (singleExpression r))) )))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 0b10n)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression (literal (bigintLiteral 0b11n)))) , (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (singleExpression (singleExpression (literal (bigintLiteral 0b11n))) + (singleExpression (literal " >> Object(0b10n) = "))) + (singleExpression r))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o2) = (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 0b1100001n)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression o2)) , (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (bigintLiteral 0b11000n)))) , (argument (singleExpression (singleExpression (literal "Object(0b1100001n) * Object(10n) = ")) + (singleExpression r))) )))) (eos ;))))) <EOF>)