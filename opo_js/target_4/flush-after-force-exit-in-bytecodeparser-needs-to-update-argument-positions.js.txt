(program (sourceElements (sourceElement (statement (functionDeclaration function runNearStackLimit ( (formalParameterList (formalParameterArg (assignable f))) ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function t ( ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (singleExpression t) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;)))) }))))))) }))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression t) (arguments ( )))) (eos ;)))))) }))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runNearStackLimit) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { })))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runNearStackLimit) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { })))))) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function f2 ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal 'use strict'))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName push)) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) + (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ])) + (singleExpression a)) + (singleExpression undefinedVariable))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))))) }))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runNearStackLimit) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression f2) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (numericLiteral 2)))) , (argument (singleExpression (literal (numericLiteral 3)))) )))) (eos ;)))))) })))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runNearStackLimit) (arguments ( )))) (eos ;)))) }) (catchProduction catch (block { })))))) <EOF>)