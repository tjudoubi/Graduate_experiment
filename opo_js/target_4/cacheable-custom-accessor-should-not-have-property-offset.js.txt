(program (sourceElements (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression main) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v1) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName length)) : (singleExpression parseInt)) })))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) v6 =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v6) < (singleExpression (literal (numericLiteral 100))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v6) = (singleExpression (singleExpression v6) + (singleExpression (literal (numericLiteral 2.0)))))) (eos )))) (statement (block { (statementList (statement (functionDeclaration function v8 ( (formalParameterList (formalParameterArg (assignable v9)) , (formalParameterArg (assignable v10)) , (formalParameterArg (assignable v11)) , (formalParameterArg (assignable v12))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v13) = (singleExpression (singleExpression v9) (arguments ( ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v15) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName set)) : (singleExpression parseInt)) })))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v17) = (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression v13)) , (argument (singleExpression (literal (numericLiteral 4294967295)))) , (argument (singleExpression v15)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression v1) . (identifierName __proto__)) = (singleExpression v13))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v18) = (singleExpression (singleExpression v1) . (identifierName arguments)))) (eos ;)))) }) (catchProduction catch ( (assignable v19) ) (block { }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression v8)) (eos ;)))))) })) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v21) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 293729.1679360643)))) , (arrayElement (singleExpression (literal (numericLiteral 2635518607)))) , (arrayElement (singleExpression (literal (numericLiteral 293729.1679360643)))) , (arrayElement (singleExpression (literal (numericLiteral 293729.1679360643)))) , (arrayElement (singleExpression (literal (numericLiteral 293729.1679360643))))) ])))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable v22) = (singleExpression (singleExpression (singleExpression v21) . (identifierName reduce)) (arguments ( (argument (singleExpression v8)) ))))) (eos ;)))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noDFG) (arguments ( (argument (singleExpression main)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noFTL) (arguments ( (argument (singleExpression main)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression main) (arguments ( )))) (eos ;))))) <EOF>)