(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Bad assertion"))) ))))) eos))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression (literal (numericLiteral 20))))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) . (identifierName length)) === (singleExpression (literal (numericLiteral 0))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression arguments)) !== (singleExpression (literal "function")))) )))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { functionBody })) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression arguments)) === (singleExpression (literal "function")))) )))) (eos ;)))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression arguments)))))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression originalArguments) = (singleExpression (singleExpression x) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression originalArguments) === (singleExpression arguments))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression z)) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 25)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression z) = (singleExpression arguments))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression z) !== (singleExpression originalArguments))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression x) (arguments ( ))) === (singleExpression z))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression z)) === (singleExpression (literal "function")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression z) (arguments ( ))) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable (objectLiteral { (propertyAssignment (singleExpression arguments)) })))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 25)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName arguments)) : (singleExpression (literal (numericLiteral 20)))) }))) )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable y) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression arguments))))) , (formalParameterArg (assignable (objectLiteral { (propertyAssignment (singleExpression arguments)) })))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 25)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) !== (singleExpression arguments))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression undefined)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName arguments)) : (singleExpression (objectLiteral { }))) }))) )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable y) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression arguments))))) , (formalParameterArg (assignable z) = (singleExpression (singleExpression y) (arguments ( )))) , (formalParameterArg (assignable (objectLiteral { (propertyAssignment (singleExpression arguments)) })))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression z)) === (singleExpression (literal "object")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression z) . (identifierName length)) === (singleExpression (literal (numericLiteral 3))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression z) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression undefined))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression z) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) === (singleExpression undefined))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression (singleExpression z) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ])) === (singleExpression (literal "object")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression z) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) . (identifierName arguments)) === (singleExpression arguments))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 25)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) !== (singleExpression arguments))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression undefined)) , (argument (singleExpression undefined)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName arguments)) : (singleExpression (objectLiteral { }))) }))) )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable arguments))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 30)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 30))))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression (literal (numericLiteral 25)))) )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable arguments))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression arguments)))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression foo) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 30)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 30))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression foo) (arguments ( ))) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression arguments) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression foo) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression (literal (numericLiteral 25)))) )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) . (identifierName length)) === (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression outer) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression arguments)))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a))) (eos ;)))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression outer) (arguments ( ))) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression (literal (numericLiteral 25))))) )))) (eos ;))) (statement (functionDeclaration function arguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 30)))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression outer) (arguments ( ))) === (singleExpression arguments))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression outer) (arguments ( ))) (arguments ( ))) === (singleExpression (literal (numericLiteral 30))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 30))))) )))) (eos ;))) (statement (functionDeclaration function b ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ])) (eos ;)))))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression arguments) (arguments ( ))) === (singleExpression (literal (numericLiteral 30))))) )))) (eos ;)))))) })) (arguments ( (argument (singleExpression (literal (numericLiteral 25)))) )))) ))) (eos ;))))) <EOF>)