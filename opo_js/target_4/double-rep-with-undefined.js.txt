(program (sourceElements (sourceElement (statement (functionDeclaration function addArgsNumberAndUndefined ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) + (singleExpression b))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression addArgsNumberAndUndefined)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression i)) , (argument (singleExpression (literal (numericLiteral 1)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression ( (expressionSequence (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 1))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(i, 1) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression (literal (numericLiteral 0.5)))) , (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression ( (expressionSequence (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.5))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(0.5, i) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression undefined)) , (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(undefined, i) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression i)) , (argument (singleExpression undefined)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(i, undefined) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(i) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( (argument (singleExpression undefined)) , (argument (singleExpression undefined)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined(undefined, undefined) failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression addArgsNumberAndUndefined) (arguments ( ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "addArgsNumberAndUndefined() failed with i = ")) + (singleExpression i)) + (singleExpression (literal " returned value = "))) + (singleExpression value))) (eos ;)))))) })))))) <EOF>)