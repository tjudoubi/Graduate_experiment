(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) (eos ;)))) (sourceElement (statement (functionDeclaration function Foo ( ) { functionBody }))) (sourceElement (statement (functionDeclaration function second ( (formalParameterList (formalParameterArg (assignable next)) , (formalParameterArg (assignable cp))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 100)))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function first ( (formalParameterList (formalParameterArg (assignable next)) , (formalParameterArg (assignable cp))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression cp) < (singleExpression (literal (numericLiteral 60)))) ? (singleExpression new (singleExpression (singleExpression Foo) (arguments ( )))) : (singleExpression (singleExpression next) (arguments ( (argument (singleExpression cp)) ))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function createClosure ( (formalParameterList (formalParameterArg (assignable next)) , (formalParameterArg (assignable strategy))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function closure ( (formalParameterList (formalParameterArg (assignable cp))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression strategy) (arguments ( (argument (singleExpression next)) , (argument (singleExpression cp)) )))) (eos ;)))))) })))) (eos ;)))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable tmp) = (singleExpression (singleExpression createClosure) (arguments ( (argument (singleExpression (literal null))) , (argument (singleExpression second)) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable bar) = (singleExpression (singleExpression createClosure) (arguments ( (argument (singleExpression tmp)) , (argument (singleExpression first)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 50000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 32)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 32)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 32)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 100)))) )))) (eos ;)))) })))))) <EOF>)