(program (sourceElements (sourceElement (statement (functionDeclaration function f ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression (singleExpression (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 100)))) ))) . (identifierName fill)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable ta) = (singleExpression new (singleExpression (singleExpression Set) (arguments ( (argument (singleExpression (singleExpression (singleExpression a) . (identifierName map)) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( (formalParameterList (formalParameterArg (assignable v)) , (formalParameterArg (assignable k))) )) => (arrowFunctionBody (singleExpression k))))) )))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable xs) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression a)) , (arrayElement (singleExpression ta))) ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable q) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable t) = (singleExpression (singleExpression (singleExpression Date) . (identifierName now)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable x))) of (expressionSequence (singleExpression (singleExpression xs) [ (expressionSequence (singleExpression (singleExpression i) & (singleExpression (literal (numericLiteral 1))))) ])) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression q) (assignmentOperator +=) (singleExpression x))) (eos ;)))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression (singleExpression Date) . (identifierName now)) (arguments ( ))) - (singleExpression t))) , (arrayElement (singleExpression q))) ]))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression f)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;))))) <EOF>)