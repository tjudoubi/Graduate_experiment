(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression a))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'Bad assertion'))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable calls) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName (identifierName z))) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression calls) . (identifierName push)) (arguments ( (argument (singleExpression (literal 'z'))) )))) eos))))) }) , (propertyAssignment (getter get (propertyName (identifierName a))) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression calls) . (identifierName push)) (arguments ( (argument (singleExpression (literal 'a'))) )))) eos))))) }) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression o)) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { (propertyAssignment (singleExpression (singleExpression (singleExpression calls) . (identifierName push)) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) )))) })))))) , (propertyAssignment (propertyName (identifierName enumerable)) : (singleExpression (literal true))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression o)) , (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal 'foo'))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { (propertyAssignment (singleExpression (singleExpression (singleExpression calls) . (identifierName push)) (arguments ( (argument (singleExpression (literal 'Symbol(foo)'))) )))) })))))) , (propertyAssignment (propertyName (identifierName enumerable)) : (singleExpression (literal true))) }))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { (propertyAssignment ... (singleExpression o)) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) === (singleExpression (literal 'z')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) === (singleExpression (literal 'a')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]) === (singleExpression (literal 'Symbol(foo)')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression obj)) ))) . (identifierName length)) === (singleExpression (literal (numericLiteral 3))))) )))) (eos ;)))))) }))) )) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable calls) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName z)) : (singleExpression (literal (numericLiteral 2)))) , (propertyAssignment (propertyName (identifierName a)) : (singleExpression (literal (numericLiteral 3)))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable fooSymbol) = (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal 'foo'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression o)) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 4)))) , (propertyAssignment (propertyName (identifierName enumerable)) : (singleExpression (literal true))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression o)) , (argument (singleExpression fooSymbol)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 5)))) , (propertyAssignment (propertyName (identifierName enumerable)) : (singleExpression (literal true))) }))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable p) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression o)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable target)) , (formalParameterArg (assignable property)) , (formalParameterArg (assignable receiver))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression calls) . (identifierName push)) (arguments ( (argument (singleExpression property)) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression target) [ (expressionSequence (singleExpression property)) ])) (eos ;)))))) }))) }))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { (propertyAssignment ... (singleExpression p)) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) == (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) == (singleExpression (literal 'z')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) == (singleExpression (literal 'a')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression calls) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]) === (singleExpression fooSymbol))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression obj)) ))) . (identifierName length)) === (singleExpression (literal (numericLiteral 3))))) )))) (eos ;)))))) }))) )) (arguments ( )))) (eos ;))))) <EOF>)