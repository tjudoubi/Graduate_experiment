(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable createDOMJITGetterObject) = (singleExpression (singleExpression $vm) . (identifierName createDOMJITGetterObject)))) (eos ;)))) (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `bad value: ${String(actual)}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable domjit1) = (singleExpression (singleExpression createDOMJITGetterObject) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable domjit2) = (singleExpression (singleExpression createDOMJITGetterObject) (arguments ( ))))) (eos ;)))) (sourceElement (statement (functionDeclaration function access ( (formalParameterList (formalParameterArg (assignable domjit))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression domjit) . (identifierName customGetter)) + (singleExpression (singleExpression domjit) . (identifierName customGetter)))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression access) (arguments ( (argument (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression i) & (singleExpression (literal (numericLiteral 0x1))))) )) ? (singleExpression domjit1) : (singleExpression domjit2))) )))) , (argument (singleExpression (literal (numericLiteral 84)))) )))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression access) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName customGetter)) : (singleExpression (literal (numericLiteral 42)))) }))) )))) , (argument (singleExpression (literal (numericLiteral 84)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression domjit1) . (identifierName test)) = (singleExpression (literal (numericLiteral 44))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression access) (arguments ( (argument (singleExpression domjit1)) )))) , (argument (singleExpression (literal (numericLiteral 84)))) )))) (eos ;))))) <EOF>)