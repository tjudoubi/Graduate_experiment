(program (sourceElements (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression trigger) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v21) = (singleExpression (literal "test")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v25) = (singleExpression (singleExpression ( (expressionSequence (singleExpression (literal (numericLiteral 10)))) )) [ (expressionSequence (singleExpression (literal (numericLiteral 11)))) ]))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v27) = (singleExpression (singleExpression (literal (numericLiteral 4294967297))) + (singleExpression v21)))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) v31 =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 1)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v31) < (singleExpression (literal (numericLiteral 1000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v31) ++)) (eos )))) (statement (block { (statementList (statement (emptyStatement ;))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v33) = (singleExpression new (singleExpression (singleExpression Float32Array) (arguments ( )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v34) = (singleExpression (singleExpression v21) [ (expressionSequence (singleExpression v27)) ]))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v35) = (singleExpression (singleExpression v33) [ (expressionSequence (singleExpression v27)) ]))) (eos ;)))) }))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression main) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression trigger) (arguments ( )))) (eos ;)))) }))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression main) (arguments ( )))) (eos ;))))) <EOF>)