(program (sourceElements (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression __getRandomObject) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (iterationStatement for ( (singleExpression let) obj)) (statement (expressionStatement (expressionSequence (singleExpression of)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression __getObjects) (arguments ( )))) (eos )))) (statement (block { }))) }))) (sourceElement (statement (functionDeclaration function __getRandomProperty ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression properties) = (singleExpression (singleExpression __getproperties) (arguments ( (argument (singleExpression obj)) ))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression properties) [ (expressionSequence (singleExpression (singleExpression seed) % (singleExpression (singleExpression properties) . (identifierName length)))) ])) (eos ;)))))) }))) (sourceElement (statement (tryStatement try (block { }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName WScript)) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { }))) , (argument (singleExpression (objectLiteral { }))) )))))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function ValueOf ( ) { (functionBody (sourceElements (sourceElement (statement (switchStatement switch ( (expressionSequence (singleExpression value)) ) (caseBlock { })))))) }))))) }))) )) (arguments ( (argument (singleExpression this)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable global))) ) { functionBody }))) )) (arguments ( (argument (singleExpression this)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function f1 ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression v) = (singleExpression (singleExpression (singleExpression v) . (identifierName map)) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { })))))) ))))) eos))))) }))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f1) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f1) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 983831)))) ))) [ (expressionSequence (singleExpression (singleExpression __getRandomProperty) (arguments ( (argument (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 983831)))) )))) )))) ]) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression (literal 'next')))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: iterator prototype should have next method."))) (eos ;)))))) (sourceElement (statement (functionDeclaration function f2 ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable v) = (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression v) . (identifierName next)) !== (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression randoF2)) ]) . (identifierName next)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Error: next method is not the same."))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a1) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sym) = (singleExpression (singleExpression (singleExpression a1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression __callRandomFunction) (arguments ( (argument (singleExpression keys)) , (argument (singleExpression (literal (numericLiteral 457796)))) , (argument (singleExpression keys)) , (argument (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 860068)))) )))) , (argument (singleExpression keys)) , (argument (singleExpression (literal true))) , (argument (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 32567)))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1073741825))))) , (argument (singleExpression (literal null))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression keys)) , (argument (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) , (argument (singleExpression (objectLiteral { }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f2) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression a1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression keys) . (identifierName keys)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression a1) . (identifierName entries)) (arguments ( ))))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable set1) = (singleExpression new (singleExpression (singleExpression Set) (arguments ( (argument (singleExpression (arrayLiteral [ elementList ]))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sym) = (singleExpression (singleExpression (singleExpression set1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable keys) = (singleExpression (singleExpression (singleExpression set1) . (identifierName keys)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable entries) = (singleExpression (singleExpression (singleExpression set1) . (identifierName entries)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f2) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression set1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression set1) . (identifierName keys)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression set1) . (identifierName entries)) (arguments ( ))))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable map1) = (singleExpression new (singleExpression (singleExpression Map) (arguments ( )))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (arrayLiteral [ elementList ])) [ (expressionSequence (singleExpression - (singleExpression (literal (numericLiteral 10))))) ])) , (arrayElement (singleExpression (singleExpression (singleExpression (arrayLiteral [ elementList ])) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]))) ])) . (identifierName forEach)) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sym) = (singleExpression (singleExpression (singleExpression map1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable keys) = (singleExpression (singleExpression (singleExpression map1) . (identifierName keys)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable entries) = (singleExpression (singleExpression (singleExpression map1) . (identifierName entries)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f2) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression map1) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression map1) . (identifierName keys)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression map1) . (identifierName entries)) (arguments ( ))))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (functionDeclaration function f3 ( ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression vl) !== (singleExpression vl))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression __v_19176)) ))))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable arr2) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (functionDeclaration function f4 ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr2) . (identifierName push)) (arguments ( (argument (singleExpression randov)) )))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr2) . (identifierName push)) (arguments ( (argument (singleExpression randov)) )))) eos))))) }))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `Hello`)) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `World`)) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `Hello`)) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression __callRandomFunction) (arguments ( (argument (singleExpression arr2)) , (argument (singleExpression (literal (numericLiteral 247938)))) , (argument (singleExpression set1)) , (argument (singleExpression new (singleExpression (singleExpression Boolean) (arguments ( (argument (singleExpression (literal true))) ))))) , (argument (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 692620)))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1e-15))))) , (argument (singleExpression (singleExpression __getRandomObject) (arguments ( (argument (singleExpression (literal (numericLiteral 276888)))) )))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression set1) != (singleExpression (literal null))) && (singleExpression (singleExpression typeof (singleExpression set1)) == (singleExpression (literal "object"))))) ) (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression set1)) , (argument (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) , (argument (singleExpression (objectLiteral { }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `Hello\n`)) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `Hello\r`)) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a1) != (singleExpression (literal null))) && (singleExpression (singleExpression typeof (singleExpression a1)) == (singleExpression (literal "object"))))) ) (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression a1)) , (argument (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) , (argument (singleExpression (objectLiteral { }))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "tag`Hello\n${v}world`"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "tag`Hello\n${v}world`"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( (argument (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression arr10) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) = (singleExpression (singleExpression (singleExpression (singleExpression set1) * (singleExpression (literal (numericLiteral 100)))) + (singleExpression (singleExpression (literal (numericLiteral 1))) * (singleExpression (literal (numericLiteral 10))))) + (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression arr10) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) = (singleExpression (singleExpression (singleExpression (singleExpression set1) * (singleExpression (literal (numericLiteral 100)))) + (singleExpression (singleExpression (literal (numericLiteral 1))) * (singleExpression (literal (numericLiteral 10))))) + (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "tag`Hello${v}\nworld`"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "tag`Hello${v}\nworld`"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "tag`Hello\n${v}world`"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression (singleExpression a1) [ (expressionSequence (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) ]) (arguments ( ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 106779))) [ (expressionSequence (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) ]) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression entries) [ (expressionSequence (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) ]) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression set1) [ (expressionSequence (singleExpression (singleExpression __getRandomProperty) (arguments ( )))) ]) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f3) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) !== (singleExpression (singleExpression arr2) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression gc) (arguments ( )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression arr10) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression arr10) < (singleExpression (literal (numericLiteral 3))))) ; (expressionSequence (singleExpression ++ (singleExpression arr10))) ) (statement (block { (statementList (statement (tryStatement try (block { }) (catchProduction catch ( (assignable e) ) (block { }))))) }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f4) `Hello${        4}world`)) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable counter) = (singleExpression (literal (numericLiteral 0x10000))))) ; (expressionSequence (singleExpression (singleExpression counter) < (singleExpression (literal (numericLiteral 0x10ffff))))) ; (expressionSequence (singleExpression ++ (singleExpression counter))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable charCode) = (singleExpression (singleExpression (singleExpression String) . (identifierName fromCharCode)) (arguments ( ))))) (eos ;)))) })))))) <EOF>)