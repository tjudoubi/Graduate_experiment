(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Bad assertion"))) ))))) (eos ;)))))))) }))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable value) = (singleExpression (literal 'foo-bar')))) (eos ;))) (statement (classDeclaration class SuperClass (classTail { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName _id)) = (singleExpression value))) (eos ;)))))) })) }))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ProxiedSuperClass) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression SuperClass)) , (argument (singleExpression (objectLiteral { }))) )))))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 500))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression p) = (singleExpression new (singleExpression ProxiedSuperClass)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression p) . (identifierName _id)) === (singleExpression value))) )))) (eos ;)))) })) (statement (classDeclaration class A (classTail extends (singleExpression ProxiedSuperClass) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) (arguments ( )))) (eos ;)))))) })) }))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression A) . (identifierName __proto__)) === (singleExpression ProxiedSuperClass))) )))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 500))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression new (singleExpression A)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression a) . (identifierName _id)) === (singleExpression value))) )))) (eos ;)))) }))) })))) <EOF>)