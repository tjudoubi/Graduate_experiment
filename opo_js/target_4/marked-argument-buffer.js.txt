(program (sourceElements (sourceElement (statement (functionDeclaration function allocate ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 17)))) )))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression array) . (identifierName length)))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression i)) ]) = (singleExpression new (singleExpression (singleExpression Uint32Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x00040000)))) )))))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable arr) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr) . (identifierName xxx)) = (singleExpression (literal "xxx")))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1024))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression i)) ]) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression i)) )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression arr) [ (expressionSequence (singleExpression i)) ]) . (identifierName xxx)) = (singleExpression (singleExpression (literal "xxx ")) + (singleExpression i)))) eos))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression this) . (identifierName gc))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName gc)) (arguments ( )))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 256)))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable targetReference) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable keepAlive) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression x) < (singleExpression (singleExpression array) . (identifierName length)))) ; (expressionSequence (singleExpression (singleExpression x) ++)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression x) == (singleExpression (singleExpression (singleExpression array) . (identifierName length)) / (singleExpression (literal (numericLiteral 4)))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression keepAlive) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 2047)))) )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression targetReference) . (identifierName shift)) (arguments ( )))) (eos ;)))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression x)) ]) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 4095)))) )))))) (eos ;)))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable l) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName toString)) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 0))) == (singleExpression l))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression keepAlive) = (singleExpression (literal null)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression targetReference) = (singleExpression (literal null)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression obj) . (identifierName prop)) . (identifierName value)) = (singleExpression (literal null)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression allocate) (arguments ( )))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression l) (assignmentOperator +=) (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 10)))) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName x0)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x1)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x2)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x3)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x4)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x5)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x6)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x7)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x8)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x9)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName x10)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) , (propertyAssignment (propertyName (identifierName length)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression o)) }))) , (propertyAssignment (propertyName (identifierName prop)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression targetReference)) }))) , (propertyAssignment (propertyName (identifierName beast)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) }))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array2) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expectedLength) = (singleExpression (singleExpression targetReference) . (identifierName length)))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperties)) (arguments ( (argument (singleExpression array2)) , (argument (singleExpression obj)) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression array2) . (identifierName prop)) . (identifierName length)) != (singleExpression expectedLength))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "fail"))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( )))) (eos ;))))) <EOF>)