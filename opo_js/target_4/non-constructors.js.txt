(program (sourceElements (sourceElement (statement (functionDeclaration function shouldThrow ( (formalParameterList (formalParameterArg (assignable func)) , (formalParameterArg (assignable errorMessage))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable errorThrown) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable error) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression func) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression errorThrown) = (singleExpression (literal true)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression error) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression errorThrown))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'not thrown'))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))) !== (singleExpression errorMessage))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `bad error: ${String(error)}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (classDeclaration class ClassTest (classTail { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { functionBody })) (classElement (methodDefinition (propertyName (identifierName method)) ( ) { functionBody })) (classElement (methodDefinition (getter get (propertyName (identifierName getter))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 20)))) (eos ;)))))) })) (classElement (methodDefinition (setter set (propertyName (identifierName setter))) ( (formalParameterList (formalParameterArg (assignable name))) ) { functionBody })) (classElement static (methodDefinition (propertyName (identifierName method)) ( ) { functionBody })) (classElement static (methodDefinition (getter get (propertyName (identifierName getter))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 20)))) (eos ;)))))) })) (classElement static (methodDefinition (setter set (propertyName (identifierName setter))) ( (formalParameterList (formalParameterArg (assignable name))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 20)))) (eos ;)))))) })) })))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable test) = (singleExpression new (singleExpression (singleExpression ClassTest) (arguments ( )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable test2) = (singleExpression new (singleExpression (singleExpression (singleExpression test) . (identifierName constructor)) (arguments ( )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression test) . (identifierName method)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new test.method()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression (singleExpression test) . (identifierName __proto__))) , (argument (singleExpression (literal 'getter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName get)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.get()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression (singleExpression test) . (identifierName __proto__))) , (argument (singleExpression (literal 'setter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName set)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.set()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression ClassTest) . (identifierName method)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new ClassTest.method()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression ClassTest)) , (argument (singleExpression (literal 'getter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName get)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.get()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression ClassTest)) , (argument (singleExpression (literal 'setter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName set)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.set()')`))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable test) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName method)) ( ) { functionBody }) , (propertyAssignment (getter get (propertyName (identifierName getter))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 20)))) (eos ;)))))) }) , (propertyAssignment (setter set (propertyName (identifierName setter))) ( (formalParameterArg (assignable name)) ) { functionBody }) , (propertyAssignment (propertyName (identifierName normal)) : (singleExpression (anoymousFunction function ( ) { functionBody }))) , (propertyAssignment (propertyName (identifierName constructor)) ( ) { functionBody }) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression test) . (identifierName method)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new test.method()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression test) . (identifierName constructor)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new test.constructor()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression test)) , (argument (singleExpression (literal 'getter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName get)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.get()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable descriptor) = (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression test)) , (argument (singleExpression (literal 'setter'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression descriptor) . (identifierName set)) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new descriptor.set()')`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression test) . (identifierName normal)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable arrow) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (objectLiteral { }))))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression arrow) (arguments ( ))))) (eos ;)))))) })))) , (argument (singleExpression (literal `TypeError: function is not a constructor (evaluating 'new arrow()')`))) )))) (eos ;))))) <EOF>)