(program (sourceElements (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test1) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o1))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos )))) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) })))) (eos ;)))) })) (statement (returnStatement return (expressionSequence (singleExpression - (singleExpression o2))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test1) (arguments ( )))) (eos ;)))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test2) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o1))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos )))) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) })))) (eos ;)))) })) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o1) - (singleExpression o2))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test2) (arguments ( )))) (eos ;)))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test3) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o1))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos )))) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) })))) (eos ;)))) })) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o1) + (singleExpression o2))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test3) (arguments ( )))) (eos ;)))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test4) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o1))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos )))) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (objectLiteral { }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) }))) })))) (eos ;)))) })) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o1) * (singleExpression o2))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test4) (arguments ( )))) (eos ;))))) <EOF>)