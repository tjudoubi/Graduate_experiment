(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable message))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression a))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression message)) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function assertThrowRangeError ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression n) = (singleExpression (singleExpression a) ** (singleExpression b)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (literal false))) , (argument (singleExpression (literal "Should throw RangeError, but executed without exception"))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression RangeError))) , (argument (singleExpression (singleExpression (literal "Expected RangeError, got: ")) + (singleExpression e))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression - (singleExpression (literal (bigintLiteral 1n))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression - (singleExpression (literal (bigintLiteral 1n))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression - (singleExpression (literal (bigintLiteral 1n))))) , (argument (singleExpression - (singleExpression (literal (bigintLiteral 1n))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertThrowRangeError) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression - (singleExpression (literal (bigintLiteral 100000000000000000n))))) )))) (eos ;))))) <EOF>)