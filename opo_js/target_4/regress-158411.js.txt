(program (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (arrayLiteral [ elementList ])) . (identifierName slice)) (arguments ( (argument (singleExpression (objectLiteral { }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( )))) (eos ;)))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { })))))) <EOF>)