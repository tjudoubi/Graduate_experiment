(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression args) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x10000)))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression args) . (identifierName fill)) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression args) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression args) . (identifierName map)) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( (formalParameterList (formalParameterArg (assignable _)) , (formalParameterArg (assignable i))) )) => (arrowFunctionBody (singleExpression (singleExpression (literal 'a')) + (singleExpression i)))))) ))) . (identifierName join)) (arguments ( (argument (singleExpression (literal ', '))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression gun) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `(function () {    class A {    }    class B extends A {        constructor(${args}) {            () => {                ${args};                super();            };            class C {                constructor() {                }                trigger() {                    (() => {                        super.x;                    })();                }                triggerWithRestParameters(...args) {                    (() => {                        super.x;                    })();                }            }            return new C();        }    }    return new B();})()`))) ))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 0x10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression gun) . (identifierName trigger)) (arguments ( )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression gun) . (identifierName triggerWithRestParameters)) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (numericLiteral 2)))) , (argument (singleExpression (literal (numericLiteral 3)))) )))) (eos ;)))) })))) <EOF>)