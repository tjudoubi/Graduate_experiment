(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable c)) , (formalParameterArg (assignable p))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression (singleExpression b) + (singleExpression c)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression p)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) ++)) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression a)) (eos ;)))) }))))))) }))) (sourceElement (statement (functionDeclaration function bar ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal "hello"))) , (argument (singleExpression a)) , (argument (singleExpression b)) , (argument (singleExpression (singleExpression a) <= (singleExpression b))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (literal (numericLiteral 2000000000)))) , (argument (singleExpression (literal (numericLiteral 2000000000)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 4000000001))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)