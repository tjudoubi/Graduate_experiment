(program (sourceElements (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression x)) )))) eos))) (sourceElement (statement (block { (statementList (statement (switchStatement switch ( (expressionSequence (singleExpression x)) ) (caseBlock { (caseClauses (caseClause case (expressionSequence (singleExpression (literal "a"))) :) (caseClause case (expressionSequence (singleExpression (literal "a"))) :) (caseClause case (expressionSequence (singleExpression (literal "a"))) : (statementList (statement (iterationStatement for ( (singleExpression let) j =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 100))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression j)) ))))) (eos ;)))) }))))) (defaultClause default : (statementList (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 2)))) (eos ;))))) })))) }))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal "ab"))) )))) (eos ;)))) })))) <EOF>)