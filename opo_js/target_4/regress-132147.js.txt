(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable count))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression (singleExpression a) | (singleExpression (literal (numericLiteral 0)))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression b) = (singleExpression (singleExpression b) | (singleExpression (literal (numericLiteral 0)))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (literal false))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 1)))) (eos ;)))) })) else (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (singleExpression (singleExpression a) & (singleExpression (literal (numericLiteral 0xff00)))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression b) = (singleExpression (singleExpression b) & (singleExpression (literal (numericLiteral 0x00ff)))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression orA) = (singleExpression (singleExpression a) | (singleExpression (literal (numericLiteral 0xff00)))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression xorB) = (singleExpression (singleExpression b) ^ (singleExpression (literal (numericLiteral 0xff)))))) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression orA) | (singleExpression xorB))) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable argA) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable argB) = (singleExpression (literal (numericLiteral 0x22))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) eos))) (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression result) | (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression argA)) , (argument (singleExpression argB)) , (argument (singleExpression (literal (numericLiteral 4)))) )))))) eos))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 0xffdd))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Incorrect result!"))) ))))) (eos ;))))))) <EOF>)