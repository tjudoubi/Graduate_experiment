(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (numericLiteral 0)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (numericLiteral 1)) : (singleExpression (literal (numericLiteral 2)))) , (propertyAssignment (propertyName (numericLiteral 2)) : (singleExpression (literal (numericLiteral 3)))) , (propertyAssignment (propertyName (numericLiteral 3)) : (singleExpression (literal (numericLiteral 4)))) , (propertyAssignment (propertyName (numericLiteral 4)) : (singleExpression (literal (numericLiteral 5)))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (numericLiteral 0)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (numericLiteral 1)) : (singleExpression (literal "HELLO"))) , (propertyAssignment (propertyName (numericLiteral 2)) : (singleExpression (literal (numericLiteral 3)))) , (propertyAssignment (propertyName (numericLiteral 3)) : (singleExpression (literal (numericLiteral 4)))) , (propertyAssignment (propertyName (numericLiteral 4)) : (singleExpression (literal (numericLiteral 5)))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array3) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (numericLiteral 0)) : (singleExpression (literal (numericLiteral 0.1)))) , (propertyAssignment (propertyName (numericLiteral 1)) : (singleExpression (literal "OK"))) , (propertyAssignment (propertyName (numericLiteral 2)) : (singleExpression (literal (numericLiteral 0.3)))) , (propertyAssignment (propertyName (numericLiteral 3)) : (singleExpression (literal (numericLiteral 0.4)))) , (propertyAssignment (propertyName (numericLiteral 4)) : (singleExpression (literal (numericLiteral 0.5)))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ensureArrayStorage) (arguments ( (argument (singleExpression array2)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName ok)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array2) . (identifierName ok)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array3) . (identifierName ok)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (functionDeclaration function testArrayStorage ( (formalParameterList (formalParameterArg (assignable array))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 4)))) ])) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression testArrayStorage)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e6))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression testArrayStorage) (arguments ( (argument (singleExpression array)) )))) , (argument (singleExpression (literal (numericLiteral 5)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression testArrayStorage) (arguments ( (argument (singleExpression array2)) )))) , (argument (singleExpression (literal (numericLiteral 5)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression testArrayStorage) (arguments ( (argument (singleExpression array3)) )))) , (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array4) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0)))) , (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4))))) ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression testArrayStorage) (arguments ( (argument (singleExpression array4)) )))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;))))) <EOF>)