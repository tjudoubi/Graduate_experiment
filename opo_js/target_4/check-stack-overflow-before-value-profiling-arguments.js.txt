(program (sourceElements (sourceElement (statement (functionDeclaration function fullGC ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression Float64Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x1000000)))) ))))) (eos ;)))) }))))))) }))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression outer) (arguments ( )))) eos))) (sourceElement (statement (block { (statementList (statement (functionDeclaration function f ( ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable r) = (singleExpression (singleExpression f) (arguments ( ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable o) = (singleExpression (singleExpression Object) (arguments ( ))))) (eos ;))) (statement (functionDeclaration function inner ( (formalParameterList (formalParameterArg (assignable a1)) , (formalParameterArg (assignable a2)) , (formalParameterArg (assignable a3))) ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable r1) = (singleExpression new (singleExpression (singleExpression Uint32Array) (arguments ( )))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable r2) = (singleExpression (singleExpression (singleExpression r1) . (identifierName values)) (arguments ( ))))) (eos ;)))) }) (catchProduction catch ( (assignable e2) ) (block { }))))))) })) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression inner) (arguments ( ))))) (eos ;)))) }))))))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;))) statement (statement function) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression edenGC) (arguments ( )))) eos)) (statement (block { (statementList (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos )))) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable floatArray) = (singleExpression new (singleExpression (singleExpression Float64Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x10000)))) )))))) (eos ;)))) }))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression edenGC) (arguments ( )))) (eos ;)))) }))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable result) = (singleExpression (singleExpression outer) (arguments ( ))))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fullGC) (arguments ( )))) (eos ;))))) <EOF>)