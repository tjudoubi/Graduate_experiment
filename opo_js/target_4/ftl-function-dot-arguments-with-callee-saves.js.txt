(program (sourceElements (sourceElement (statement (functionDeclaration function baz ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression foo) . (identifierName arguments))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression baz)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression baz) (arguments ( )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( (formalParameterList (formalParameterArg (assignable o)) , (formalParameterArg (assignable i))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression (singleExpression o) . (identifierName f)))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (numericLiteral 2)))) , (argument (singleExpression (literal (numericLiteral 3)))) )))) , (arrayElement (singleExpression x))) ]))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression (singleExpression bar) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 42)))) }))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression a) . (identifierName length)) != (singleExpression (literal (numericLiteral 2)))) || (singleExpression (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) . (identifierName length)) != (singleExpression (literal (numericLiteral 3))))) || (singleExpression (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) != (singleExpression (literal (numericLiteral 1))))) || (singleExpression (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) != (singleExpression (literal (numericLiteral 2))))) || (singleExpression (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) != (singleExpression (literal (numericLiteral 3))))) || (singleExpression (singleExpression (singleExpression a) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) != (singleExpression (literal (numericLiteral 42)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression a))) (eos ;)))))) })))))) <EOF>)