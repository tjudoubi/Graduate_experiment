(program (sourceElements (sourceElement (statement (functionDeclaration function opaqueDivBy2 ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 2))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBy2)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBy3 ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 3))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBy3)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBy4 ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 4))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBy4)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBySafeMaxMinusOne ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 44942328371557897693232629769725618340449424473557664318357520289433168951375240783177119330601884005280028469967848339414697442203604155623211857659868531094441973356216371319075554900311523529863270738021251442209537670585615720368478277635206809290837627671146574559986811484619929076208839082406056034304))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBySafeMaxMinusOne)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBySafeMax ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 89884656743115795386465259539451236680898848947115328636715040578866337902750481566354238661203768010560056939935696678829394884407208311246423715319737062188883946712432742638151109800623047059726541476042502884419075341171231440736956555270413618581675255342293149119973622969239858152417678164812112068608))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBySafeMax)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBySafeMaxPlusOne ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression (literal (numericLiteral 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBySafeMaxPlusOne)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBySafeMin ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (literal (numericLiteral 44942328371557897693232629769725618340449424473557664318357520289433168951375240783177119330601884005280028469967848339414697442203604155623211857659868531094441973356216371319075554900311523529863270738021251442209537670585615720368478277635206809290837627671146574559986811484619929076208839082406056034304))))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBySafeMin)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function opaqueDivBySafeMinMinusOne ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) / (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (literal (numericLiteral 89884656743115795386465259539451236680898848947115328636715040578866337902750481566354238661203768010560056939935696678829394884407208311246423715319737062188883946712432742638151109800623047059726541476042502884419075341171231440736956555270413618581675255342293149119973622969239858152417678164812112068608))))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression opaqueDivBySafeMinMinusOne)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 1.5707963267948966))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy2(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy2(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy2(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy2(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 1.3591409142295225))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy2(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy3) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 1.0471975511965976))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy3(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy3) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy3(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy3) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy3(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy3) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy3(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy3) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0.9060939428196817))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy3(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0.7853981633974483))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy4(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy4(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy4(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy4(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0.6795704571147613))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBy4(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 6.990275687580919e-308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 6.048377836559378e-308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMax) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 3.4951378437904593e-308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMax(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMax) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMax(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMax) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMax(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMax) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMax(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMax) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 3.024188918279689e-308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMax(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxPlusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxPlusOne(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxPlusOne) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxPlusOne(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxPlusOne) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxPlusOne(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxPlusOne) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxPlusOne(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxPlusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMaxPlusOne(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 1.4119048864730642e+308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMin(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMin(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMin(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMin(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 1.2216591454104522e+308))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMin(Math.E). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMinMinusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName PI))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMinMinusOne(Math.PI). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMinMinusOne) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMinMinusOne(NaN). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMinMinusOne) (arguments ( (argument (singleExpression Infinity)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMinMinusOne(Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMinMinusOne) (arguments ( (argument (singleExpression - (singleExpression Infinity))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMinMinusOne(-Infinity). Result = ")) + (singleExpression result))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMinMinusOne) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Failed opaqueDivBySafeMinMinusOne(Math.E). Result = ")) + (singleExpression result))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e3))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBy2()"))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression (literal null))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBy4(null)"))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression (literal "WebKit!"))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) === (singleExpression result))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBy4(null)"))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression (literal ""))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBySafeMin('')"))) (eos ;))))) (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy2) (arguments ( (argument (singleExpression (singleExpression Symbol) (arguments ( )))) ))))) (eos ;))) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBy2(Symbol())"))) (eos ;)))) }) (catchProduction catch ( (assignable exception) ) (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "TypeError: Cannot convert a symbol to a number")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Wrong exception: ")) + (singleExpression exception))) (eos ;)))))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBy4) (arguments ( (argument (singleExpression (literal true))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0.25))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBy4(true)"))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMaxMinusOne) (arguments ( (argument (singleExpression (literal false))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBySafeMaxMinusOne(false)"))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) = (singleExpression (singleExpression opaqueDivBySafeMin) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))))) }))) }))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Failed opaqueDivBySafeMin({ valueOf: function() { return 42; }})"))) (eos ;)))))) })))) <EOF>)