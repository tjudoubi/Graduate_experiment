(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function shouldBeWithValueCheck ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable callback))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal ""))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `1`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `1; 2`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42;;;;;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; var x;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; let x;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; const x = 1;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; var x = 1;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; var x = 1, y = 2;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; debugger;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; { }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; class foo {}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; function foo() {}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; function* foo() {}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; async function foo() {}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; label: {}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `42; { { var x; } var y; { { debugger } ;; } function foo() {} }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; 42`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; { 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: { 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; x = 42`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; x = 42; x`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; 1, 2, 3, 42`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; x = 41; ++x`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; x = 42; x++`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; true ? 42 : -1`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; false ? -1 : 42`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression Array) . (identifierName isArray)) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; [x,y] = [1,2]`))) )))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; ({})`))) ))))) , (argument (singleExpression (literal "object"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; (function foo() {})`))) ))))) , (argument (singleExpression (literal "function"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; (function* foo() {})`))) ))))) , (argument (singleExpression (literal "function"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; (async function foo() {})`))) ))))) , (argument (singleExpression (literal "function"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; (class foo {})`))) ))))) , (argument (singleExpression (literal "function"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (true);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (true) 42;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) -1;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (true) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (true) {42}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {42}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else {42}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (true) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (true) {42}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (true) {} else {-2}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (true) {42} else {-2}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (false) {-2} else {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; if (false) {-1} else if (false) {-2} else {42}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do; while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do 42; while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do {} while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do break; while (true);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { break } while (true);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { 42 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; do { x } while (x++ !== (5+5));`))) )))) , (argument (singleExpression (literal (numericLiteral 10)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; do { x; 42 } while (x++ !== (5+5));`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; do { x; break } while (x++ !== (5+5));`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; do { x; continue } while (x++ !== (5+5));`))) )))) , (argument (singleExpression (literal (numericLiteral 10)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; while (false) {};`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; while (true) break;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; while (true) { break };`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; while (true) { 42; break };`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) ;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) { }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) { x }`))) )))) , (argument (singleExpression (literal (numericLiteral 10)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) { x; 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) { x; break }`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `let x = 1; while (x++ !== (5+5)) { x; continue }`))) )))) , (argument (singleExpression (literal (numericLiteral 10)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;false;);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;false;) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (var x = 1;false;);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1;false;) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;;) break;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;;) { break }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;;) { 42; break }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (;;) { 42; break; 3 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) x;`))) )))) , (argument (singleExpression (literal (numericLiteral 9)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; }`))) )))) , (argument (singleExpression (literal (numericLiteral 9)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; break }`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; break; 3 }`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; continue }`))) )))) , (argument (singleExpression (literal (numericLiteral 9)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x = 1; x !== (5+5); x++) { x; continue; 3 }`))) )))) , (argument (singleExpression (literal (numericLiteral 9)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (var x of []) -1;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of []) -1;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (var x of [1,2]);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) break;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { break; 3; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) x`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { x }`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { x; break }`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { x; break; 3 }`))) )))) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { x; continue }`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x of [1,2]) { x; continue; 3 }`))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (var x in {}) -1;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {}) -1;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (var x in {a:1,b:2});`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2});`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) break;`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { break; 3; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) x`))) )))) , (argument (singleExpression (literal "b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { x }`))) )))) , (argument (singleExpression (literal "b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { x; break }`))) )))) , (argument (singleExpression (literal "a"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { x; break; 3 }`))) )))) , (argument (singleExpression (literal "a"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { x; continue }`))) )))) , (argument (singleExpression (literal "b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; for (x in {a:1,b:2}) { x; continue; 3 }`))) )))) , (argument (singleExpression (literal "b"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { default:}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { default:42}`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { default:break;}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1:  }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 2: case 1:  }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 2: case 1: 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 2: case 1: break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 2: case 1: 42; break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: case 2:  }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: case 2: 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: case 2: break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: case 2: 42; break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: 42; case 2:  }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: -1; case 2: 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: 42; case 2: break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 1: -1; case 2: 42; break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 0: -1; break; case 1: 42; break; default: -1; break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 0: -1; break; case 1: ; break; default: -1; break; }`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; switch (1) { case 0: -1; break; case 1: 42; break; default: -1; break; }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; with (true);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; with (true) {}`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; with (true) 42;`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; with (true) { 42 }`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try {} catch (e) {-1};`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try {} catch (e) {-1} finally {-2};`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try {42} catch (e) {-1};`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try {42} catch (e) {-1} finally {-2};`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try { [].x.x } catch (e) {};`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try { [].x.x } catch (e) {42} finally {-2};`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try { throw 42 } catch (e) {e};`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; try { throw 42 } catch (e) {e} finally {-2};`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { break; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { 42; break; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { break; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { 42; break; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { break; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { 42; break; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { break; } catch (e) { -1 }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; break; } catch (e) { -1 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { break; } catch (e) {-1} finally {-2}; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; break; } catch (e) {-1} finally {-2}; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { break; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; break; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { break; } finally {-2}; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; break; } finally {-2}; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42 } catch (e) { -1 } finally { -2; break; -3 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; } finally { -2; break; -3 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { break; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { 42; break; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { break; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { 42; break; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { break; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { 42; break; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { break; } catch (e) { -1 }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; break; } catch (e) { -1 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { break; } catch (e) {-1} finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; break; } catch (e) {-1} finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { break; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; break; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { break; } finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; break; } finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42 } catch (e) { -1 } finally { -2; break; -3 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; } finally { -2; break; -3 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { continue; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { 42; continue; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { continue; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { 42; continue; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { continue; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { 42; continue; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { continue; } catch (e) { -1 }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; continue; } catch (e) { -1 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { continue; } catch (e) {-1} finally {-2}; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; continue; } catch (e) {-1} finally {-2}; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { continue; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; continue; }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { continue; } finally {-2}; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; continue; } finally {-2}; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42 } catch (e) { -1 } finally { -2; continue; -3 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; } finally { -2; continue; -3 }; } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { continue; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (true) { 42; continue; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { continue; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; if (false) { } else { 42; continue; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { continue; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; with (true) { 42; continue; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { continue; } catch (e) { -1 }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; continue; } catch (e) { -1 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { continue; } catch (e) {-1} finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42; continue; } catch (e) {-1} finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { continue; }; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; continue; }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { continue; } finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; continue; } finally {-2}; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { 42 } catch (e) { -1 } finally { -2; continue; -3 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; do { -99; try { [].x.x } catch (e) { 42; } finally { -2; continue; -3 }; -77 } while (false);`))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; if (true) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; if (true) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; with (true) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; with (true) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; do { break label; 2; } while (false); } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; do { break label; 2; } while (false); 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; try { break label; 2; } catch (e) {-1;} while (false); } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; try { break label; 2; } catch (e) {-1;} while (false); 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; while (true) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; while (true) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (;;) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (;;) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (var x in {a:77}) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (var x in {a:77}) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (var x of [77]) { break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; for (var x of [77]) { break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; switch (true) { default: break label; 2; }; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal `99; label: do { 1; switch (true) { default: break label; 2; }; 3; } while (false);`))) )))) , (argument (singleExpression undefined)) )))) (eos ;))))) <EOF>)