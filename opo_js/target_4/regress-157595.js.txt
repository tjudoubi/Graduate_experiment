(program (sourceElements (sourceElement (statement (classDeclaration class MyRegExp (classTail extends (singleExpression RegExp) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( (formalParameterList (formalParameterArg (assignable pattern))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) (arguments ( (argument (singleExpression pattern)) , (argument (singleExpression (literal ""))) )))) (eos ;)))))) })) (classElement (methodDefinition (getter get (propertyName (identifierName global))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal true))) (eos ;)))))) })) })))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression new (singleExpression (singleExpression MyRegExp) (arguments ( (argument (singleExpression (literal "."))) )))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (literal "abc")) . (identifierName match)) (arguments ( (argument (singleExpression r)) )))) (eos ;)))))) }))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression e) . (identifierName message)) != (singleExpression (literal "Out of memory")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Wrong error: ")) + (singleExpression e))) (eos ;)))))) })))))) <EOF>)