(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable priceRanges) = (singleExpression (objectLiteral { (propertyAssignment (propertyName "1") : (singleExpression (literal (numericLiteral 0.6)))) , (propertyAssignment (propertyName "100") : (singleExpression (literal (numericLiteral 0.45)))) , (propertyAssignment (propertyName "250") : (singleExpression (literal (numericLiteral 0.3)))) , (propertyAssignment (propertyName "2000") : (singleExpression (literal (numericLiteral 0.28)))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression priceRanges)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression priceRanges)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression priceRanges) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) , (argument (singleExpression (literal (numericLiteral 0.6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression priceRanges) [ (expressionSequence (singleExpression (literal (numericLiteral 100)))) ])) , (argument (singleExpression (literal (numericLiteral 0.45)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression priceRanges) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 0.3)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression priceRanges) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 0.28)))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable ranges) = (singleExpression (objectLiteral { (propertyAssignment (propertyName "250") : (singleExpression (literal (numericLiteral 0.5)))) , (propertyAssignment (propertyName "1000") : (singleExpression (literal (numericLiteral 0.1)))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression ranges)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression ranges)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression ranges) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression ranges) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 0.1)))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable r) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression r) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ]) = (singleExpression (literal (numericLiteral 0.1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression r) [ (expressionSequence (singleExpression (literal (numericLiteral 1001)))) ]) = (singleExpression (literal (numericLiteral 0.5))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression r)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression ranges)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression r) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 0.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression r) [ (expressionSequence (singleExpression (literal (numericLiteral 1001)))) ])) , (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 100)))) ]) = (singleExpression NaN))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ]) = (singleExpression (literal (numericLiteral 0.1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 260)))) ]) = (singleExpression NaN))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ]) = (singleExpression (literal (numericLiteral 0.5))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression foo)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression foo)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression isNaN) (arguments ( (argument (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 100)))) ])) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 0.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression isNaN) (arguments ( (argument (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 260)))) ])) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 0.5)))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable boo) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName "250") : (singleExpression (literal (numericLiteral 0.2)))) , (propertyAssignment (propertyName "1000") : (singleExpression (literal (numericLiteral 0.1)))) }))) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable b) = (singleExpression (singleExpression boo) (arguments ( ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable keys) = (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression b)) ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable values) = (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression b)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression keys) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression values) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression b) [ (expressionSequence (singleExpression (singleExpression keys) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) ])) , (argument (singleExpression (singleExpression values) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression b) [ (expressionSequence (singleExpression (singleExpression keys) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) ])) , (argument (singleExpression (singleExpression values) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) )))) (eos ;)))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable baz) = (singleExpression (objectLiteral { (propertyAssignment (propertyName "250") : (singleExpression (literal "A"))) , (propertyAssignment (propertyName "1001") : (singleExpression (literal "B"))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression baz)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName values)) (arguments ( (argument (singleExpression baz)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression baz) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal "A"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression baz) [ (expressionSequence (singleExpression (literal (numericLiteral 1001)))) ])) , (argument (singleExpression (literal "B"))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable bar) = (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{"0":97.1,"1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{"0":97.1, "250": 65.3, "1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 65.3)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{"0":97.1, "250": null, "1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal null))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal '(()=>({"0":97.1, "250": 65.3, "1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}))();'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal (numericLiteral 65.3)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal '(()=>({"0":97.1, "250": null, "1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}))();'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) , (argument (singleExpression (literal null))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal '(()=>({"0":97.1, "250": NaN, "1000":96.5,"2000":96.1,"3000":97.4,"4000":90.4}))();'))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression bar)) ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 97.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression isNaN) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 250)))) ])) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 1000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.5)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 2000)))) ])) , (argument (singleExpression (literal (numericLiteral 96.1)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 3000)))) ])) , (argument (singleExpression (literal (numericLiteral 97.4)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression bar) [ (expressionSequence (singleExpression (literal (numericLiteral 4000)))) ])) , (argument (singleExpression (literal (numericLiteral 90.4)))) )))) (eos ;))))) <EOF>)