(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable array)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (iterationStatement do (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (singleExpression y) * (singleExpression (literal (numericLiteral 3)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (literal (numericLiteral 0))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression (singleExpression array) . (identifierName length)))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1))))) ])))) (eos ;))))) (statement (iterationStatement do (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression result) (assignmentOperator +=) (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (singleExpression i) ++)) ]))) (eos ;)))) })) while ( (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression array) . (identifierName length)))) ) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) ++)) (eos ;)))) })) while ( (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 3))))) ) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression result) + (singleExpression x))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3))))) ]))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))))))) <EOF>)