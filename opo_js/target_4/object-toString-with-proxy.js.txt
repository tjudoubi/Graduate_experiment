(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable createProxy) = (singleExpression (singleExpression $vm) . (identifierName createProxy)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression properties) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression p) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression foo)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction (arrowFunctionParameters ( (formalParameterList (formalParameterArg (assignable target)) , (formalParameterArg (assignable property))) )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression properties) . (identifierName push)) (arguments ( (argument (singleExpression (singleExpression (singleExpression property) . (identifierName toString)) (arguments ( )))) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression property) === (singleExpression (singleExpression Symbol) . (identifierName toStringTag)))) ) (statement (returnStatement return (expressionSequence (singleExpression (literal "bad things"))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression target) [ (expressionSequence (singleExpression property)) ])) (eos ;)))))) })))) }))) )))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 5))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression p) != (singleExpression (literal "[object bad things]")))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "bad toString result."))) ))))) (eos ;))))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression properties) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) !== (singleExpression (literal "Symbol(Symbol.toPrimitive)"))) || (singleExpression (singleExpression (singleExpression properties) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) !== (singleExpression (literal "valueOf")))) || (singleExpression (singleExpression (singleExpression properties) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) !== (singleExpression (literal "toString")))) || (singleExpression (singleExpression (singleExpression properties) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]) !== (singleExpression (literal "Symbol(Symbol.toStringTag)"))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "bad property accesses."))) ))))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression properties) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression p) = (singleExpression (singleExpression createProxy) (arguments ( (argument (singleExpression foo)) ))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 5))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression str) = (singleExpression (singleExpression (literal "bad things")) + (singleExpression i)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) = (singleExpression str))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression p) != (singleExpression (singleExpression (singleExpression (literal "[object ")) + (singleExpression str)) + (singleExpression (literal "]"))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "bad toString result."))) ))))) (eos ;)))))) })))))) <EOF>)