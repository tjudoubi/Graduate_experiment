(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r1) = (singleExpression (literal /\k</)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression didThrow) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r2) = (singleExpression new (singleExpression (singleExpression RegExp) (arguments ( (argument (singleExpression (literal "\\k<1>"))) , (argument (singleExpression (literal "u"))) )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression didThrow) = (singleExpression (literal false)))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression didThrow) = (singleExpression (literal true)))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression didThrow))) ) (statement (throwStatement throw (expressionSequence (singleExpression ( (expressionSequence (singleExpression (literal "Trying to create a named capture reference that starts with a number should Throw"))) ))) (eos ;))))))) <EOF>)