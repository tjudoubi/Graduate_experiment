(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression Error))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '[1337,42]'))) , (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable x)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression this) instanceof (singleExpression Array))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression this)) , (argument (singleExpression (literal '1'))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (singleExpression Array) . (identifierName prototype))) }))) )))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression y)) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression this)) (eos ;)))))) }))) )))) ))) === (singleExpression (literal '{"":[1337,[]]}')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '[0, 1]'))) , (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable x)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) = (singleExpression (singleExpression Array) . (identifierName prototype)))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression y)) (eos ;)))))) }))) )))) ))) === (singleExpression (literal '[0,[]]')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{"x":22, "y":44}'))) , (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName y)) = (singleExpression (singleExpression Array) . (identifierName prototype)))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression b)) (eos ;)))))) }))) )))) ))) === (singleExpression (literal '{"x":22,"y":[]}')))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{"x":22, "y":44}'))) , (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName y)) = (singleExpression (singleExpression Array) . (identifierName prototype)))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression b)) (eos ;)))))) }))) )))) ))) === (singleExpression (literal '{"x":22,"y":[42]}')))) )))) (eos ;))))) <EOF>)