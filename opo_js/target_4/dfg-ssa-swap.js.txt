(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable i)) , (variableDeclaration (assignable c) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression (literal (numericLiteral 1)))) , (variableDeclaration (assignable b))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 2))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression a)) , (arrayElement (singleExpression b))) ])) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression b)) , (arrayElement (singleExpression a))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression c) ++)) eos))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression ! (singleExpression a)) ^ (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression c)) eos))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable k) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression k) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression k))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( )))) (eos <EOF>))))))) <EOF>)