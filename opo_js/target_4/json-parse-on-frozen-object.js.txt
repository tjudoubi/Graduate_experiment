(program (sourceElements (sourceElement (statement (functionDeclaration function shouldEqual ( (formalParameterList (formalParameterArg (assignable testId)) , (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) != (singleExpression expected))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression testId) + (singleExpression (literal ": ERROR: expect "))) + (singleExpression expected)) + (singleExpression (literal ", actual "))) + (singleExpression actual))) (eos ;)))) }))))))) }))) (sourceElement (statement (functionDeclaration function frozenArrayReviver ( (formalParameterList (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "a")))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName b)) = (singleExpression (singleExpression (singleExpression Object) . (identifierName freeze)) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "unmodifiable")))) ]))) ))))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "0")))) ) (statement (returnStatement return (expressionSequence (singleExpression (literal "modified"))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function frozenArrayLikeObjectReviver ( (formalParameterList (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "a")))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression (literal 'unmodifiable')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) . (identifierName length)) = (singleExpression (literal (numericLiteral 1))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName b)) = (singleExpression (singleExpression (singleExpression Object) . (identifierName freeze)) (arguments ( (argument (singleExpression obj)) ))))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "0")))) ) (statement (returnStatement return (expressionSequence (singleExpression (literal "modified"))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function frozenArrayReviverWithDelete ( (formalParameterList (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "a")))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName b)) = (singleExpression (singleExpression (singleExpression Object) . (identifierName freeze)) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "unmodifiable")))) ]))) ))))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "0")))) ) (statement (returnStatement return (expressionSequence (singleExpression undefined)) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function frozenArrayLikeObjectReviverWithDelete ( (formalParameterList (formalParameterArg (assignable k)) , (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "a")))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression (literal 'unmodifiable')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) . (identifierName length)) = (singleExpression (literal (numericLiteral 1))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName b)) = (singleExpression (singleExpression (singleExpression Object) . (identifierName freeze)) (arguments ( (argument (singleExpression obj)) ))))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression k) === (singleExpression (literal "0")))) ) (statement (returnStatement return (expressionSequence (singleExpression undefined)) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression v)) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function runTest ( (formalParameterList (formalParameterArg (assignable testId)) , (formalParameterArg (assignable reviver)) , (formalParameterArg (assignable expectedValue)) , (formalParameterArg (assignable expectedException))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression numIterations) = (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression numIterations))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception) = (singleExpression undefined))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj))) (eos ;))) (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression obj) = (singleExpression (singleExpression (singleExpression JSON) . (identifierName parse)) (arguments ( (argument (singleExpression (literal '{ "a": 0, "b": 0 }'))) , (argument (singleExpression reviver)) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression (singleExpression (literal "")) + (singleExpression e)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression (singleExpression (singleExpression exception) . (identifierName substr)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal (numericLiteral 10)))) ))))) (eos ;)))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldEqual) (arguments ( (argument (singleExpression testId)) , (argument (singleExpression exception)) , (argument (singleExpression expectedException)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldEqual) (arguments ( (argument (singleExpression testId)) , (argument (singleExpression (singleExpression (singleExpression obj) . (identifierName b)) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression expectedValue)) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runTest) (arguments ( (argument (singleExpression (literal (numericLiteral 10000)))) , (argument (singleExpression frozenArrayReviver)) , (argument (singleExpression (literal "unmodifiable"))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runTest) (arguments ( (argument (singleExpression (literal (numericLiteral 10001)))) , (argument (singleExpression frozenArrayLikeObjectReviver)) , (argument (singleExpression (literal "unmodifiable"))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runTest) (arguments ( (argument (singleExpression (literal (numericLiteral 10002)))) , (argument (singleExpression frozenArrayReviverWithDelete)) , (argument (singleExpression (literal "unmodifiable"))) , (argument (singleExpression undefined)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression runTest) (arguments ( (argument (singleExpression (literal (numericLiteral 10003)))) , (argument (singleExpression frozenArrayLikeObjectReviverWithDelete)) , (argument (singleExpression (literal "unmodifiable"))) , (argument (singleExpression undefined)) )))) (eos ;))))) <EOF>)