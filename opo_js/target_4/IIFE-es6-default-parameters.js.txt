(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Bad assertion"))) ))))) (eos ;)))))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression (literal (numericLiteral 20))))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression foo)) === (singleExpression (literal "function")))) )))) (eos ;)))))) })))) )) (arguments ( )))) (eos ;))) (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression (literal (numericLiteral 20))))) ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function bar ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression foo)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression foo)) === (singleExpression (literal "function")))) )))) (eos ;)))))) })))) )) (arguments ( )))) (eos ;))) (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression foo))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (literal (numericLiteral 20))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression foo) === (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression x)) === (singleExpression (literal "function")))) )))) (eos ;)))))) })))) )) (arguments ( )))) (eos ;))) (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable capFoo) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression foo)) (eos ;)))))) })))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (literal (numericLiteral 20))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression foo) === (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression (singleExpression capFoo) (arguments ( )))) === (singleExpression (literal "function")))) )))) (eos ;)))))) })))) )) (arguments ( )))) (eos ;))) (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x) = (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression (literal "foo"))) ))))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (literal (numericLiteral 20))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression foo) === (singleExpression (literal (numericLiteral 20))))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression typeof (singleExpression x)) === (singleExpression (literal "function")))) )))) (eos ;)))))) })))) )) (arguments ( )))) (eos ;)))) })))))) <EOF>)