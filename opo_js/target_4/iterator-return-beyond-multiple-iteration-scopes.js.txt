(program (sourceElements (sourceElement (statement (functionDeclaration function createIterator ( (formalParameterList (formalParameterArg (assignable callback))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0)))) , (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 5))))) ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable iterator) = (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression iterator) . (identifierName (reservedWord (keyword return)))) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression (singleExpression iterator) . (identifierName returned)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression callback)) ) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression callback) (arguments ( (argument (singleExpression this)) )))) (eos ;)))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) , (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) }))) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression iterator) . (identifierName returned)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression iterator)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (breakStatement break outer (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (breakStatement break inner (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 6))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (breakStatement break (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 6))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (breakStatement break (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 6))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (continueStatement continue (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (continueStatement continue inner (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (continueStatement continue outer (eos ;)))) }))))))) }))))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 6))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (returnStatement return (eos ;)))) }))))))) }))))))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { })))))) (statement (returnStatement return (eos ;)))) }))))))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))))) }))) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function raiseError ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Cocoa"))) ))))) (eos ;)))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable outerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable innerIterator) = (singleExpression (singleExpression createIterator) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable error) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (labelledStatement outer : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e1))) of (expressionSequence (singleExpression outerIterator)) ) (statement (block { (statementList (statement (labelledStatement inner : (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable e2))) of (expressionSequence (singleExpression innerIterator)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression raiseError) (arguments ( )))) (eos ;)))) }))))))) }))))))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression error) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression innerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression innerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression outerIterator) . (identifierName returned)) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad value: ")) + (singleExpression (singleExpression outerIterator) . (identifierName returned)))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression error))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "not thrown"))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))) !== (singleExpression (literal "Error: Cocoa")))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad error: ")) + (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))))) ))))) (eos ;)))))))) })) (arguments ( )))) ))) (eos ;)))))) }))) (arguments ( )))) ))) (eos ;))))) <EOF>)