(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b)) , (formalParameterArg (assignable m) = (singleExpression (literal "Bad!")))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression m)) ))))) (eos ;)))) }))))))) }))) (sourceElement statement) (sourceElement (statement function)) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( (argument (singleExpression f)) , (argument (singleExpression (singleExpression iters) = (singleExpression (literal (numericLiteral 1000))))) )))) eos))) (sourceElement (statement (block { (statementList (statement (iterationStatement for ( (singleExpression let) i =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression iters))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos )))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;)))) }))) (sourceElement (statement (functionDeclaration function shouldThrowTDZ ( (formalParameterList (formalParameterArg (assignable f))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression threw) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) instanceof (singleExpression ReferenceError))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression e) . (identifierName toString)) (arguments ( ))) === (singleExpression (literal "ReferenceError: Cannot access uninitialized variable.")))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression threw) = (singleExpression (literal true)))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression threw)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (classDeclaration class A (classTail { (classElement (methodDefinition (getter get (propertyName (identifierName foo))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression this) . (identifierName _x))) (eos ;)))))) })) (classElement (methodDefinition (setter set (propertyName (identifierName foo))) ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName _x)) = (singleExpression x))) (eos ;)))))) })) })))) (sourceElement (statement (functionDeclaration function fooProp ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal 'foo'))) (eos ;)))))) }))) (sourceElement (statement (classDeclaration class B (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression super) . (identifierName foo)) = (singleExpression (literal (numericLiteral 20))))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class C (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression super) [ (expressionSequence (singleExpression (singleExpression fooProp) (arguments ( )))) ]) = (singleExpression (literal (numericLiteral 20))))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class D (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) [ (expressionSequence (singleExpression (singleExpression fooProp) (arguments ( )))) ])) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class E (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) . (identifierName foo))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class F (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression (singleExpression super) . (identifierName foo)) = (singleExpression (literal (numericLiteral 20)))))))) )) (arguments ( )))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class G (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression (singleExpression super) [ (expressionSequence (singleExpression (singleExpression fooProp) (arguments ( )))) ]) = (singleExpression (literal (numericLiteral 20)))))))) )) (arguments ( )))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class H (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression super) [ (expressionSequence (singleExpression (singleExpression fooProp) (arguments ( )))) ]))))) )) (arguments ( )))) (eos ;)))))) })) })))) (sourceElement (statement (classDeclaration class I (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression super) . (identifierName foo)))))) )) (arguments ( )))) (eos ;)))))) })) })))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression B))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression C))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression D))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression E))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression F))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression G))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression H))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrowTDZ) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression I))) (eos ;)))))) }))) )))) (eos ;)))))) }))) )))) (eos ;))))) <EOF>)