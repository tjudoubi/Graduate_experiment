(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression b))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Bad assertion."))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (singleExpression (singleExpression ( (expressionSequence (singleExpression new (singleExpression Set))) )) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression x) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) === (singleExpression (literal "Set Iterator")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression y) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName __proto__)) : (singleExpression x)) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) === (singleExpression (literal "Set Iterator")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression y) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) = (singleExpression (literal (numericLiteral 25))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression y) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) === (singleExpression (literal "Set Iterator")))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression (singleExpression x) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName toStringTag))) ]) === (singleExpression (literal "Set Iterator")))) )))) (eos ;))))) <EOF>)