(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable x) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable o) = (singleExpression (singleExpression createGlobalObject) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName __proto__)) = (singleExpression o))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) j =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) < (singleExpression (literal (numericLiteral 10000))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName y)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) })) (statement (withStatement with ( (expressionSequence (singleExpression x)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression Uint8Array) (arguments ( ))))) (eos ;)))) }))))) })))) <EOF>)