(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable array))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression array) . (identifierName pop)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression array) . (identifierName pop)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression array) . (identifierName pop)) (arguments ( )))) , (arrayElement (singleExpression (singleExpression (singleExpression array) . (identifierName pop)) (arguments ( ))))) ]))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1.5)))) , (arrayElement (singleExpression (literal (numericLiteral 2.5)))) , (arrayElement (singleExpression (literal (numericLiteral 3.5))))) ]))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression result) . (identifierName toString)) (arguments ( ))) != (singleExpression (literal "3.5,2.5,1.5,")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)