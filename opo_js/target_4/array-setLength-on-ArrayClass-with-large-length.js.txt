(program (sourceElements (sourceElement (statement (functionDeclaration function assertEqual ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function toString ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (literal '')) + (singleExpression x))) (eos ;)))))) }))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression typeof (singleExpression actual)) != (singleExpression typeof (singleExpression expected)))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal "Failed: typeof expected: '")) + (singleExpression typeof (singleExpression ( (expressionSequence (singleExpression expected)) )))) + (singleExpression (literal "', typeof actual: '"))) + (singleExpression typeof (singleExpression ( (expressionSequence (singleExpression actual)) )))) + (singleExpression (literal "'")))) )))) (eos ;)))))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression toString) (arguments ( (argument (singleExpression actual)) ))) != (singleExpression (singleExpression toString) (arguments ( (argument (singleExpression expected)) ))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal "Failed: expected: '")) + (singleExpression (singleExpression toString) (arguments ( (argument (singleExpression expected)) )))) + (singleExpression (literal "', actual: '"))) + (singleExpression (singleExpression toString) (arguments ( (argument (singleExpression actual)) )))) + (singleExpression (literal "'")))) )))) (eos ;)))))) (sourceElement (statement (emptyStatement ;))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertEqual) (arguments ( (argument (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 0)))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName length)) = (singleExpression (literal (numericLiteral 0x40000000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assertEqual) (arguments ( (argument (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 0x40000000)))) )))) (eos ;))))) <EOF>)