(program (sourceElements (sourceElement (statement (functionDeclaration function shouldEqual ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) != (singleExpression expected))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "ERROR: expect ")) + (singleExpression expected)) + (singleExpression (literal ", actual "))) + (singleExpression actual))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression new (singleExpression (singleExpression Uint32Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x10)))) )))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName set)) (arguments ( (argument (singleExpression (singleExpression x) . (identifierName __proto__))) , (argument (singleExpression (literal (numericLiteral 0)))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldEqual) (arguments ( (argument (singleExpression exception)) , (argument (singleExpression (literal "TypeError: Receiver should be a typed array view"))) )))) (eos ;)))))) }))) )) (arguments ( )))) (eos ;))))) <EOF>)