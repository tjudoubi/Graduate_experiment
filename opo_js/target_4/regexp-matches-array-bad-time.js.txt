(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable count) = (singleExpression (literal (numericLiteral 11))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array) = (singleExpression (singleExpression (singleExpression (literal /foo/)) . (identifierName exec)) (arguments ( (argument (singleExpression (literal "foo"))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) != (singleExpression (literal "foo")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result: ")) + (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]))) (eos ;)))))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName __defineSetter__)) (arguments ( (argument (singleExpression (literal "0"))) , (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression count) (assignmentOperator +=) (singleExpression value))) (eos ;)))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression count) != (singleExpression (literal (numericLiteral 53))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad count: ")) + (singleExpression count))) (eos ;)))))))) }))) )) (arguments ( )))) (eos ;))))) <EOF>)