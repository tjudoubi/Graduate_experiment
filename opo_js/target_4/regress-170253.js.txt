(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName __defineGetter__)) (arguments ( (argument (singleExpression (literal (numericLiteral 1000)))) , (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (literal (numericLiteral 0))))))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 0x1000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 0x10)))) ))) . (identifierName fill)) (arguments ( (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (objectLiteral { }))) , (arrayElement (singleExpression (objectLiteral { }))) , (arrayElement (singleExpression (objectLiteral { }))) , (arrayElement (singleExpression (objectLiteral { })))) ]))) ))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 0x1000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName length)) : (singleExpression (literal (numericLiteral 0x10)))) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName __defineGetter__)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression gc) (arguments ( ))))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Array) . (identifierName prototype)) . (identifierName splice)) . (identifierName call)) (arguments ( (argument (singleExpression x)) , (argument (singleExpression (literal (numericLiteral 0)))) )))) (eos ;)))) })))) <EOF>)