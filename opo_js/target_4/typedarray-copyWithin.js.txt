(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression load) (arguments ( (argument (singleExpression (literal "./resources/typedarray-test-helper-functions.js"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression description) (arguments ( (argument (singleExpression (literal "This test checks the behavior of the TypedArray.prototype.copyWithin function"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (literal "Int32Array.prototype.copyWithin.length"))) , (argument (singleExpression (literal "2"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (literal "Int32Array.prototype.copyWithin.name"))) , (argument (singleExpression (literal "'copyWithin'"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "isSameFunctionForEachTypedArrayPrototype('copyWithin')"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeReceivesArray('copyWithin', [undefined, this, { }, [ ], true, ''])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeFunction('copyWithin', '(0, 3)', [1, 2, 3, 4, 5], [4, 5, 3, 4, 5])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeFunction('copyWithin', '(0, 3, 4)', [1, 2, 3, 4, 5], [4, 2, 3, 4, 5])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeFunction('copyWithin', '(0, -2, -1)', [1, 2, 3, 4, 5], [4, 2, 3, 4, 5])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeFunction('copyWithin', '(5, -5, 5)', [1, 2, 3, 4, 5], [1, 2, 3, 4, 5])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeTrue) (arguments ( (argument (singleExpression (literal "testPrototypeFunction('copyWithin', '(1, -5, 5)', [1, 2, 3, 4, 5], [1, 1, 2, 3, 4])"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression finishJSTest) (arguments ( )))) (eos ;))))) <EOF>)