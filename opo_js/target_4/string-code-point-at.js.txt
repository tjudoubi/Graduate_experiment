(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `bad value: ${actual}, expected ${expected}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function testSurrogatePair ( (formalParameterList (formalParameterArg (assignable testString)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression testString) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression testString) . (identifierName codePointAt)) (arguments ( (argument (singleExpression i)) )))) , (argument (singleExpression (singleExpression expected) [ (expressionSequence (singleExpression i)) ])) )))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression testSurrogatePair)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal 'Cocoa')))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 67)))) , (arrayElement (singleExpression (literal (numericLiteral 111)))) , (arrayElement (singleExpression (literal (numericLiteral 99)))) , (arrayElement (singleExpression (literal (numericLiteral 111)))) , (arrayElement (singleExpression (literal (numericLiteral 97)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "𠮷野家")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0x20BB7)))) , (arrayElement (singleExpression (literal (numericLiteral 0xDFB7)))) , (arrayElement (singleExpression (literal (numericLiteral 0x91CE)))) , (arrayElement (singleExpression (literal (numericLiteral 0x5BB6)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "A\uD842")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) , (arrayElement (singleExpression (literal (numericLiteral 0xD842)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "A\uD842A")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) , (arrayElement (singleExpression (literal (numericLiteral 0xD842)))) , (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "A\uD842\uDFB7")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) , (arrayElement (singleExpression (literal (numericLiteral 0x20BB7)))) , (arrayElement (singleExpression (literal (numericLiteral 0xDFB7)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "\uD842A\uDFB7")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0xD842)))) , (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) , (arrayElement (singleExpression (literal (numericLiteral 0xDFB7)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testString) = (singleExpression (literal "\uDFB7\uD842A")))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable expected) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0xDFB7)))) , (arrayElement (singleExpression (literal (numericLiteral 0xD842)))) , (arrayElement (singleExpression (literal (numericLiteral 0x0041)))) ,) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testSurrogatePair) (arguments ( (argument (singleExpression testString)) , (argument (singleExpression expected)) )))) (eos ;)))) })))))) <EOF>)