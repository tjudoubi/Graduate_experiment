(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression objs) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 1000)))) )))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression of)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression objs) . (identifierName keys)) (arguments ( )))) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName foo)) = (singleExpression (literal (numericLiteral 1))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression o) . (identifierName foo)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression objs) [ (expressionSequence (singleExpression i)) ]) = (singleExpression o))) (eos ;)))) }))) (sourceElement (statement (functionDeclaration function f ( (formalParameterList (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName foo)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))))) }))) (sourceElement (statement (iterationStatement for ( (singleExpression let) obj))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression of)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression objs)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression setter) = (singleExpression new (singleExpression (singleExpression Function) (arguments ( (argument (singleExpression (literal `        Object.defineProperty(this, "foo", {            writable: true,            configurable: true,            value: null        });        let o = Object.create(this);                let str = "for (let i = 0; i < 1000; i++) o.foo";        eval(str);    `))) )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) . (identifierName __defineSetter__)) (arguments ( (argument (singleExpression (literal "foo"))) , (argument (singleExpression setter)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression obj)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression obj)) )))) (eos ;)))) })))) <EOF>)