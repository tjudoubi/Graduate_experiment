(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fromArray) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression toArray) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression dummyArray) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression endObj1) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression originalLength) = (singleExpression (singleExpression fromArray) . (identifierName length)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression fromArray) . (identifierName length)) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression dummyArray) = (singleExpression new (singleExpression (singleExpression Float64Array) (arguments ( (argument (singleExpression (literal (numericLiteral 1000)))) )))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression originalLength)) (eos ;)))))) }))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression endObj2) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression originalLength) = (singleExpression (singleExpression fromArray) . (identifierName length)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression fromArray) . (identifierName length)) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression dummyArray) = (singleExpression new (singleExpression (singleExpression Float64Array) (arguments ( (argument (singleExpression (literal (numericLiteral 1000)))) )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fromArray) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression fromArray) . (identifierName length)) = (singleExpression originalLength))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression originalLength)) (eos ;)))))) }))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression initialArray) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 8000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression initialArray) . (identifierName push)) (arguments ( (argument (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.1))))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) loop =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression loop) < (singleExpression (literal (numericLiteral 1000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression loop) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fromArray) = (singleExpression (singleExpression (singleExpression initialArray) . (identifierName slice)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression endObj) = (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression loop) % (singleExpression (literal (numericLiteral 2)))) == (singleExpression (literal (numericLiteral 1))))) )) ? (singleExpression endObj1) : (singleExpression endObj2)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression toArray) = (singleExpression (singleExpression (singleExpression fromArray) . (identifierName slice)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression endObj)) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression toArray) = (singleExpression (singleExpression (singleExpression fromArray) . (identifierName splice)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression endObj)) ))))) (eos ;)))) })))) <EOF>)