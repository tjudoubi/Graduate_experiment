(program (sourceElements (sourceElement (statement (classDeclaration class A (classTail { (classElement (methodDefinition (propertyName (identifierName constructor)) ( ) { functionBody })) })))) (sourceElement (statement (classDeclaration class B (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( (formalParameterList (formalParameterArg (assignable accessThisBeforeSuper))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression accessThisBeforeSuper)) ) (statement (expressionStatement (expressionSequence (singleExpression this)) (eos ;))) else (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) (arguments ( )))) (eos ;)))))))) })) })))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression B)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression B) (arguments ( (argument (singleExpression (literal false))) ))))) (eos ;))))))) <EOF>)