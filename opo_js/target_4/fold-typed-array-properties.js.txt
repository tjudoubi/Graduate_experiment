(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression new (singleExpression (singleExpression Int32Array) (arguments ( (argument (singleExpression new (singleExpression (singleExpression ArrayBuffer) (arguments ( (argument (singleExpression (literal (numericLiteral 100)))) ))))) , (argument (singleExpression (literal (numericLiteral 4)))) , (argument (singleExpression (literal (numericLiteral 1)))) )))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName length)) != (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad length (start): ")) + (singleExpression (singleExpression a) . (identifierName length)))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName byteOffset)) != (singleExpression (literal (numericLiteral 4))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad offset (start): ")) + (singleExpression (singleExpression a) . (identifierName byteOffset)))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression a) . (identifierName byteLength)) != (singleExpression (literal (numericLiteral 4))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad byte length (start): ")) + (singleExpression (singleExpression a) . (identifierName byteLength)))) (eos ;)))))) (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable when))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable tmp) = (singleExpression (singleExpression a) . (identifierName length)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression tmp) != (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: bad length (")) + (singleExpression when)) + (singleExpression (literal "): "))) + (singleExpression tmp))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression tmp) = (singleExpression (singleExpression a) . (identifierName byteOffset)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression tmp) != (singleExpression (literal (numericLiteral 4))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: bad offset (")) + (singleExpression when)) + (singleExpression (literal "): "))) + (singleExpression tmp))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression tmp) = (singleExpression (singleExpression a) . (identifierName byteLength)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression tmp) != (singleExpression (literal (numericLiteral 4))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: bad byte length (")) + (singleExpression when)) + (singleExpression (literal "): "))) + (singleExpression tmp))) (eos ;)))))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal "loop"))) )))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression transferArrayBuffer) (arguments ( (argument (singleExpression (singleExpression a) . (identifierName buffer))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable didThrow) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal "after transfer"))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression didThrow) = (singleExpression (literal true)))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression didThrow))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Should have thrown."))) (eos ;))))))) <EOF>)