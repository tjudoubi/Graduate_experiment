(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable v))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression global) = (singleExpression v))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression global)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable n) = (singleExpression (literal (numericLiteral 100000))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable m) = (singleExpression (literal (numericLiteral 100))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression n))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression i) == (singleExpression (singleExpression n) - (singleExpression m)))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (singleExpression value) = (singleExpression (literal (numericLiteral 53))))) )))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression bar) (arguments ( ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: on iteration ")) + (singleExpression i)) + (singleExpression (literal " got: "))) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)