(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable A) = (singleExpression (literal (numericLiteral 8000))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable B) = (singleExpression (literal (numericLiteral 8000))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable C) = (singleExpression (literal (numericLiteral 100))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable Iters) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (functionDeclaration function dontCrash ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression a) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression a) < (singleExpression A))) ; (expressionSequence (singleExpression ++ (singleExpression a))) ) (statement (block { (statementList (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression b) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression b) < (singleExpression B))) ; (expressionSequence (singleExpression ++ (singleExpression b))) ) (statement (block { (statementList (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression c) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression c) < (singleExpression C))) ; (expressionSequence (singleExpression ++ (singleExpression c))) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression ++ (singleExpression Iters)) > (singleExpression (literal (numericLiteral 10000000))))) ) (statement (returnStatement return (eos ;)))))) }))))) }))))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression dontCrash) (arguments ( )))) (eos ;))))) <EOF>)