(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression (singleExpression (singleExpression Function) . (identifierName prototype)) . (identifierName apply))) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Function) . (identifierName prototype)) . (identifierName apply)) . (identifierName call)) (arguments ( (argument (singleExpression (singleExpression (singleExpression WeakMap) . (identifierName bind)) (arguments ( )))) )))) (eos ;)))) }) (catchProduction catch (block { })))) (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Function) . (identifierName prototype)) . (identifierName apply)) . (identifierName call)) (arguments ( (argument (singleExpression WeakMap)) )))) (eos ;)))) }) (catchProduction catch (block { }))))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( )))) (eos ;))))) <EOF>)