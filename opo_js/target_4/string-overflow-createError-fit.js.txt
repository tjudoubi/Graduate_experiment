(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) = (singleExpression (literal '2.3023e-320')))) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) = (singleExpression (singleExpression (singleExpression bar) . (identifierName padEnd)) (arguments ( (argument (singleExpression (literal (numericLiteral 2147480000)))) , (argument (singleExpression (literal (numericLiteral 1)))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal (numericLiteral 1)))) ))) . (identifierName value))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression ! (singleExpression (singleExpression (singleExpression (singleExpression exception) . (identifierName message)) . (identifierName startsWith)) (arguments ( (argument (singleExpression (literal "foo is not a function"))) )))) && (singleExpression (singleExpression exception) != (singleExpression (literal "Error: Out of memory"))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED"))) (eos ;))))))) <EOF>)