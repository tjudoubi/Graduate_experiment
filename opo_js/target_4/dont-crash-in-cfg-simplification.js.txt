(program (sourceElements (sourceElement (statement (functionDeclaration function bar ( ) { functionBody }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function baz ( ) { functionBody }))) (sourceElement (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression typeof (singleExpression baz)) !== (singleExpression (literal "undefined")))) ) (statement (block { })) else (statement (block { (statementList (statement (iterationStatement while ( (expressionSequence (singleExpression (literal true))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( )))) (eos ;)))))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression i))) (eos ))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( )))) (eos ;))))) <EOF>)