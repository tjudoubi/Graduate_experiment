(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) (eos ;)))) (sourceElement (statement (functionDeclaration function f ( (formalParameterList (lastFormalParameterArg ... (singleExpression v))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression g) (arguments ( (argument (singleExpression v)) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function g ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression h) (arguments ( )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function h ( ) { functionBody }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier let) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal (numericLiteral 0)))) )))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression (singleExpression Array) . (identifierName prototype))) , (argument (singleExpression (literal "42"))) , (argument (singleExpression (objectLiteral { }))) )))) (eos ;))))) <EOF>)