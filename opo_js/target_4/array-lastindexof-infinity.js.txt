(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 42.195)))) , (arrayElement (singleExpression - (singleExpression (literal (numericLiteral 0.0))))) , (arrayElement (singleExpression - (singleExpression Infinity)))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression Infinity)) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression - (singleExpression Infinity))) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 0))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression Infinity)) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression - (singleExpression Infinity))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "String"))) , (arrayElement (singleExpression (literal (numericLiteral 42.5)))) , (arrayElement (singleExpression Infinity)) , (arrayElement (singleExpression (literal (numericLiteral 33))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression Infinity)) )))) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression array) . (identifierName lastIndexOf)) (arguments ( (argument (singleExpression - (singleExpression Infinity))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))) })))) <EOF>)