(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable p))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression (singleExpression p) ? (singleExpression (literal null)) : (singleExpression (literal false))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression typeof (singleExpression x))) )) == (singleExpression (literal "object")))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable p) = (singleExpression ! (singleExpression ! (singleExpression ( (expressionSequence (singleExpression (singleExpression i) & (singleExpression (literal (numericLiteral 1))))) )))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression p)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression p))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (literal "Error: bad result for p = ")) + (singleExpression p)) + (singleExpression (literal ": "))) + (singleExpression result))) (eos ;)))))) })))))) <EOF>)