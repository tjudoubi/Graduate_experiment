(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sortedValues))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable testCase) = (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected)) , (formalParameterArg (assignable message))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression message) + (singleExpression (literal ". Expected '"))) + (singleExpression expected)) + (singleExpression (literal "', but was '"))) + (singleExpression actual)) + (singleExpression (literal "'")))) (eos ;)))) }))))))) })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable obj) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName arr)) : (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 6)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 7)))) , (arrayElement (singleExpression (literal (numericLiteral 0))))) ]))) , (propertyAssignment (propertyName (identifierName bubbleSort)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable tmp))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable ar) = (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName arr)) . (identifierName slice)) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable _length) = (singleExpression (singleExpression ar) . (identifierName length)))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression _length))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression i))) ; (expressionSequence (singleExpression (singleExpression j) > (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) --)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression j)) ]) - (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression (singleExpression j) - (singleExpression (literal (numericLiteral 1))))) ]))) )) < (singleExpression (literal (numericLiteral 0))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression tmp) = (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression j)) ]))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression j)) ]) = (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression (singleExpression j) - (singleExpression (literal (numericLiteral 1))))) ]))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression ar) [ (expressionSequence (singleExpression (singleExpression j) - (singleExpression (literal (numericLiteral 1))))) ]) = (singleExpression tmp))) (eos ;)))) }))))) }))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression ar)) (eos ;)))))) })))) eos))))) }))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression (singleExpression obj) . (identifierName bubbleSort))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) . (identifierName arr)) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 6)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 7)))) , (arrayElement (singleExpression (literal (numericLiteral 0))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression obj) . (identifierName bubbleSort)) (arguments ( ))) (arguments ( ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 7)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #1"))) )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sortedValues) = (singleExpression (singleExpression (singleExpression (singleExpression obj) . (identifierName bubbleSort)) (arguments ( ))) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression sortedValues) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #6"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression sortedValues) [ (expressionSequence (singleExpression (literal (numericLiteral 6)))) ])) , (argument (singleExpression (literal (numericLiteral 7)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #7"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression obj) . (identifierName arr)) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 6)))) , (arrayElement (singleExpression (literal (numericLiteral 5)))) , (arrayElement (singleExpression (literal (numericLiteral 8)))) , (arrayElement (singleExpression (literal (numericLiteral 21)))) , (arrayElement (singleExpression (literal (numericLiteral 19)))) , (arrayElement (singleExpression (literal (numericLiteral 0))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression obj) . (identifierName bubbleSort)) (arguments ( ))) (arguments ( ))) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 9)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #8"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression sortedValues) = (singleExpression (singleExpression (singleExpression (singleExpression obj) . (identifierName bubbleSort)) (arguments ( ))) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression sortedValues) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #12"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testCase) (arguments ( (argument (singleExpression (singleExpression sortedValues) [ (expressionSequence (singleExpression (literal (numericLiteral 8)))) ])) , (argument (singleExpression (literal (numericLiteral 21)))) , (argument (singleExpression (literal "Error: this is not lexically binded inside of the arrow function #13"))) )))) (eos ;)))) })))))) <EOF>)