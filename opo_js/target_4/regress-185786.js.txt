(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { }))) , (argument (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression (objectLiteral { }))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName get)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression (literal "expected exception"))) (eos ;)))))) }))) }))) ))))) ))))) (eos ;)))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression (singleExpression foo) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable b) = (singleExpression (singleExpression (singleExpression Object) . (identifierName create)) (arguments ( (argument (singleExpression a)) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable v))) in (expressionSequence (singleExpression b)) ) (statement (block { }))))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "expected exception")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAIL"))) (eos ;))))))) <EOF>)