(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable symbol1) = (singleExpression (singleExpression Symbol) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable symbol2) = (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertySymbols)) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName [ (singleExpression symbol1) ]) : (singleExpression (literal (numericLiteral 42)))) }))) ))) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]))) (eos ;)))) (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function getByVal ( (formalParameterList (formalParameterArg (assignable object)) , (formalParameterArg (assignable name))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression object) [ (expressionSequence (singleExpression name)) ])) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression getByVal)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function getSym1 ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression symbol1)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression getSym1)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function getSym2 ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression symbol2)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression getSym2)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName [ (singleExpression symbol1) ]) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName hello)) : (singleExpression (literal (numericLiteral 50)))) })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression getByVal) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (singleExpression (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 2)))) === (singleExpression (literal (numericLiteral 0)))) ? (singleExpression (singleExpression getSym1) (arguments ( ))) : (singleExpression (singleExpression getSym2) (arguments ( ))))) )))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))))))) <EOF>)