(program (sourceElements (sourceElement (statement (functionDeclaration function test ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression log) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (functionDeclaration function effect ( (formalParameterList (formalParameterArg (assignable desc))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression log) . (identifierName push)) (arguments ( (argument (singleExpression desc)) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression desc)) (eos ;)))))) }))) (sourceElement (statement (classDeclaration class C (classTail { (classElement (methodDefinition (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "instance#1"))) ))) ]) ( ) { functionBody })) (classElement static (methodDefinition (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "static#2"))) ))) ]) ( ) { functionBody })) (classElement (methodDefinition (getter get (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "instanceGetter#3"))) ))) ])) ( ) { functionBody })) (classElement static (methodDefinition (getter get (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "staticGetter#4"))) ))) ])) ( ) { functionBody })) (classElement (methodDefinition (setter set (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "instanceSetter#5"))) ))) ])) ( (formalParameterList (formalParameterArg (assignable v))) ) { functionBody })) (classElement static (methodDefinition (propertyName [ (singleExpression (singleExpression effect) (arguments ( (argument (singleExpression (literal "staticSetter#6"))) ))) ]) ( (formalParameterList (formalParameterArg (assignable v))) ) { functionBody })) })))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) === (singleExpression (literal "instance#1"))) && (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ]) === (singleExpression (literal "static#2")))) && (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 2)))) ]) === (singleExpression (literal "instanceGetter#3")))) && (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 3)))) ]) === (singleExpression (literal "staticGetter#4")))) && (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 4)))) ]) === (singleExpression (literal "instanceSetter#5")))) && (singleExpression (singleExpression (singleExpression log) [ (expressionSequence (singleExpression (literal (numericLiteral 5)))) ]) === (singleExpression (literal "staticSetter#6"))))) (eos ;)))))) }))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression (singleExpression test) (arguments ( ))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Test failed"))) ))))) (eos ;))))))) <EOF>)