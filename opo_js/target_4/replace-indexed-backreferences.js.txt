(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `expected ${expected} but got ${actual}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable search) = (singleExpression (literal /q=(\w+)\+(\w+)/)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable string) = (singleExpression (literal 'q=abc+def')))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression string) . (identifierName replace)) (arguments ( (argument (singleExpression search)) , (argument (singleExpression (literal '$1 $2'))) )))) , (argument (singleExpression (literal 'abc def'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression string) . (identifierName replace)) (arguments ( (argument (singleExpression search)) , (argument (singleExpression (literal '$01 $02'))) )))) , (argument (singleExpression (literal 'abc def'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression string) . (identifierName replace)) (arguments ( (argument (singleExpression search)) , (argument (singleExpression (literal '$0$1$3$2$4'))) )))) , (argument (singleExpression (literal '$0abc$3def$4'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression string) . (identifierName replace)) (arguments ( (argument (singleExpression search)) , (argument (singleExpression (literal '$00$01$03$02$04'))) )))) , (argument (singleExpression (literal '$00abc$03def$04'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression string) . (identifierName replace)) (arguments ( (argument (singleExpression search)) , (argument (singleExpression (literal '$10$21$32$43'))) )))) , (argument (singleExpression (literal 'abc0def1$32$43'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression search) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression string)) , (argument (singleExpression (literal '$1 $2'))) )))) , (argument (singleExpression (literal 'abc def'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression search) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression string)) , (argument (singleExpression (literal '$01 $02'))) )))) , (argument (singleExpression (literal 'abc def'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression search) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression string)) , (argument (singleExpression (literal '$0$1$3$2$4'))) )))) , (argument (singleExpression (literal '$0abc$3def$4'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression search) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression string)) , (argument (singleExpression (literal '$00$01$03$02$04'))) )))) , (argument (singleExpression (literal '$00abc$03def$04'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression search) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression string)) , (argument (singleExpression (literal '$10$21$32$43'))) )))) , (argument (singleExpression (literal 'abc0def1$32$43'))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable longSearch) = (singleExpression new (singleExpression (singleExpression RegExp) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)')) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)'))) + (singleExpression (literal '(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)(\\w)')))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable longString) = (singleExpression (singleExpression (literal 'abcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXY')) + (singleExpression (literal 'abcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXY'))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable longReplace) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal '$0$1$2$3$4$5$6$7$8$9')) + (singleExpression (literal '$10$11$12$13$14$15$16$17$18$19'))) + (singleExpression (literal '$20$21$22$23$24$25$26$27$28$29'))) + (singleExpression (literal '$30$31$32$33$34$35$36$37$38$39'))) + (singleExpression (literal '$40$41$42$43$44$45$46$47$48$49'))) + (singleExpression (literal '$50$51$52$53$54$55$56$57$58$59'))) + (singleExpression (literal '$60$61$62$63$64$65$66$67$68$69'))) + (singleExpression (literal '$70$71$72$73$74$75$76$77$78$79'))) + (singleExpression (literal '$80$81$82$83$84$85$86$87$88$89'))) + (singleExpression (literal '$90$91$92$93$94$95$96$97$98$99$100'))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression longString) . (identifierName replace)) (arguments ( (argument (singleExpression longSearch)) , (argument (singleExpression longReplace)) )))) , (argument (singleExpression (literal '$0abcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXj0'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression longSearch) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName replace))) ]) (arguments ( (argument (singleExpression longString)) , (argument (singleExpression longReplace)) )))) , (argument (singleExpression (literal '$0abcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxyABCDEFGHIJKLMNOPQRSTUVWXj0'))) )))) (eos ;))))) <EOF>)