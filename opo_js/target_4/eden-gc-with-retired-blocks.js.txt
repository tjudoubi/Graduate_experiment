(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable objs))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 500))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) (assignmentOperator +=) (singleExpression (literal (numericLiteral 100))))) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression objs) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression gc) (arguments ( )))) (eos ;))) (statement (iterationStatement for ( (singleExpression let) j =)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) < (singleExpression i))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression j) ++)) (eos )))) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression o)) (eos ;))) (statement (switchStatement switch ( (expressionSequence (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 6))))) ) (caseBlock { (caseClauses (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 0)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { })))) (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 1)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName a)) : (singleExpression i)) })))) (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 2)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName a)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName b)) : (singleExpression i)) })))) (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 3)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName a)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName b)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName c)) : (singleExpression i)) })))) (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 4)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName a)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName b)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName c)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName d)) : (singleExpression i)) })))) (eos ;))))) (caseClause case (expressionSequence (singleExpression (literal (numericLiteral 5)))) : (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName a)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName b)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName c)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName d)) : (singleExpression i)) , (propertyAssignment (propertyName (identifierName e)) : (singleExpression i)) })))) (eos ;)))))) }))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression objs) [ (expressionSequence (singleExpression j)) ]) = (singleExpression o))) (eos ;)))) })) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression edenGC) (arguments ( )))) (eos ;)))) })))) <EOF>)