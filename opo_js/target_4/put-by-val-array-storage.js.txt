(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function testArrayStorageInBounds ( (formalParameterList (formalParameterArg (assignable array)) , (formalParameterArg (assignable index)) , (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression index)) ]) = (singleExpression value))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression testArrayStorageInBounds)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 5))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ensureArrayStorage) (arguments ( (argument (singleExpression array)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 1)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testArrayStorageInBounds) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ (elementList , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ensureArrayStorage) (arguments ( (argument (singleExpression array)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression undefined)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) , (argument (singleExpression (literal (numericLiteral 2)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testArrayStorageInBounds) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testArrayStorageInBounds) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (numericLiteral 40)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ])) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 1)))) ])) , (argument (singleExpression (literal (numericLiteral 40)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 4)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testArrayStorageInBounds) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 4)))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 4)))) ])) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 5)))) )))) (eos ;)))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ (elementList , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4))))) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ensureArrayStorage) (arguments ( (argument (singleExpression array)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 6)))) ])) , (argument (singleExpression undefined)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testArrayStorageInBounds) (arguments ( (argument (singleExpression array)) , (argument (singleExpression (literal (numericLiteral 6)))) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) . (identifierName length))) , (argument (singleExpression (literal (numericLiteral 7)))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (literal (numericLiteral 6)))) ])) , (argument (singleExpression (literal (numericLiteral 42)))) )))) (eos ;)))) })))))) <EOF>)