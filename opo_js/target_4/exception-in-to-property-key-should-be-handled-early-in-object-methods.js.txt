(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable propertyKey) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "propertyKey.toString is called."))) ))))) (eos ;)))))) }) })))) (eos ;)))) (sourceElement (statement (functionDeclaration function shouldThrow ( (formalParameterList (formalParameterArg (assignable func)) , (formalParameterArg (assignable message))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable error) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression func) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression error) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression error))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "not thrown."))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))) !== (singleExpression message))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "bad error: ")) + (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable object) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName hasOwnProperty)) (arguments ( (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName prototype)) . (identifierName hasOwnProperty)) . (identifierName call)) (arguments ( (argument (singleExpression (literal null))) , (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName prototype)) . (identifierName hasOwnProperty)) . (identifierName call)) (arguments ( (argument (singleExpression (literal null))) , (argument (singleExpression (literal 'ok'))) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "TypeError: null is not an object (evaluating 'Object.prototype.hasOwnProperty.call(null, 'ok')')"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName propertyIsEnumerable)) (arguments ( (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName prototype)) . (identifierName propertyIsEnumerable)) . (identifierName call)) (arguments ( (argument (singleExpression (literal null))) , (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Object) . (identifierName prototype)) . (identifierName propertyIsEnumerable)) . (identifierName call)) (arguments ( (argument (singleExpression (literal null))) , (argument (singleExpression (literal 'ok'))) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "TypeError: null is not an object (evaluating 'Object.prototype.propertyIsEnumerable.call(null, 'ok')')"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName __defineGetter__)) (arguments ( (argument (singleExpression propertyKey)) , (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal 'NG'))) (eos ;)))))) }))) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal ''))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "bad descriptor"))) ))))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName __defineSetter__)) (arguments ( (argument (singleExpression propertyKey)) , (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal 'NG'))) (eos ;)))))) }))) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal ''))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "bad descriptor"))) ))))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName __lookupGetter__)) (arguments ( (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression object) . (identifierName __lookupSetter__)) (arguments ( (argument (singleExpression propertyKey)) )))) (eos ;)))))) }))) , (argument (singleExpression (literal "Error: propertyKey.toString is called."))) )))) (eos ;))))) <EOF>)