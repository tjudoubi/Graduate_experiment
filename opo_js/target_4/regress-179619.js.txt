(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable createBuiltin) = (singleExpression (singleExpression $vm) . (identifierName createBuiltin)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable loadGetterFromGetterSetter) = (singleExpression (singleExpression $vm) . (identifierName loadGetterFromGetterSetter)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable getter))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getter) = (singleExpression (singleExpression loadGetterFromGetterSetter) (arguments ( ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "TypeError: Invalid use of loadGetterFromGetterSetter test function: argument is not a GetterSetter")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED"))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression getter)) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED: unexpected result"))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression undefined))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getter) = (singleExpression (singleExpression loadGetterFromGetterSetter) (arguments ( (argument (singleExpression undefined)) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "TypeError: Invalid use of loadGetterFromGetterSetter test function: argument is not a GetterSetter")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED"))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression getter)) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED: unexpected result"))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression undefined))) (eos ;)))) (sourceElement (statement (functionDeclaration function tryGetByIdText ( (formalParameterList (formalParameterArg (assignable propertyName))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal `(function (base) { return @tryGetById(base, '${propertyName}'); })`))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getSetterGetter) = (singleExpression (singleExpression createBuiltin) (arguments ( (argument (singleExpression (singleExpression tryGetByIdText) (arguments ( (argument (singleExpression (literal "bar"))) )))) ))))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noGetterSetter) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getter) = (singleExpression (singleExpression loadGetterFromGetterSetter) (arguments ( (argument (singleExpression (singleExpression getSetterGetter) (arguments ( (argument (singleExpression noGetterSetter)) , (argument (singleExpression (literal "bar"))) )))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression exception) != (singleExpression (literal "TypeError: Invalid use of loadGetterFromGetterSetter test function: argument is not a GetterSetter")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED"))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression getter)) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED: unexpected result"))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression undefined))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression hasGetter) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName (identifierName bar))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 22)))) (eos ;)))))) }) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getter) = (singleExpression (singleExpression loadGetterFromGetterSetter) (arguments ( (argument (singleExpression (singleExpression getSetterGetter) (arguments ( (argument (singleExpression hasGetter)) , (argument (singleExpression (literal "bar"))) )))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression exception)) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "FAILED: unexpected exception: ")) + (singleExpression exception))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression getter))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED: unable to get getter"))) (eos ;)))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression hasSetter) = (singleExpression (objectLiteral { (propertyAssignment (setter set (propertyName (identifierName bar))) ( (formalParameterArg (assignable x)) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 22)))) (eos ;)))))) }) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression getter) = (singleExpression (singleExpression loadGetterFromGetterSetter) (arguments ( (argument (singleExpression (singleExpression getSetterGetter) (arguments ( (argument (singleExpression hasSetter)) , (argument (singleExpression (literal "bar"))) )))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression exception)) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "FAILED: unexpected exception: ")) + (singleExpression exception))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression getter))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "FAILED: unexpected result"))) (eos ;))))))) <EOF>)