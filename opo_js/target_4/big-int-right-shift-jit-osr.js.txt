(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName sameValue)) : (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable i)) , (formalParameterArg (assignable e)) , (formalParameterArg (assignable m))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression i) !== (singleExpression e))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression m)) ))))) (eos ;)))))))) }))) })))) eos))) (sourceElement (statement (functionDeclaration function bigIntRShift ( (formalParameterList (formalParameterArg (assignable x)) , (formalParameterArg (assignable y))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression x) >> (singleExpression y))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bigIntRShift)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (singleExpression let) i =))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 0)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression i) ++)) (eos ))))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression (literal (bigintLiteral 0b100111n)))) , (argument (singleExpression (literal (bigintLiteral 2n)))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (bigintLiteral 0b1001n)))) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (bigintLiteral 0b100111n))) + (singleExpression (literal " >> "))) + (singleExpression (literal (bigintLiteral 2n)))) + (singleExpression (literal " = "))) + (singleExpression r))) )))) (eos ;)))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression (literal (numericLiteral 3)))) , (argument (singleExpression (literal (numericLiteral 10)))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 3))) + (singleExpression (literal " >> "))) + (singleExpression (literal (numericLiteral 10)))) + (singleExpression (literal " = "))) + (singleExpression r))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression r) = (singleExpression (singleExpression bigIntRShift) (arguments ( (argument (singleExpression (literal "3"))) , (argument (singleExpression (literal "10"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression assert) . (identifierName sameValue)) (arguments ( (argument (singleExpression r)) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal (numericLiteral 3))) + (singleExpression (literal " >> "))) + (singleExpression (literal (numericLiteral 10)))) + (singleExpression (literal " = "))) + (singleExpression r))) )))) (eos ;))))) <EOF>)