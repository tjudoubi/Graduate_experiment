(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable p))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 42)))) })))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression p)) ) (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName f)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName g)) : (singleExpression o)) }))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 1000)))) )))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 4000000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression (literal true))) ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) [ (expressionSequence (singleExpression (singleExpression i) % (singleExpression (singleExpression array) . (identifierName length)))) ]) = (singleExpression o))) (eos ;)))) })))))) <EOF>)