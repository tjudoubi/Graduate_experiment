(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable findTypeForExpression) = (singleExpression (singleExpression $vm) . (identifierName findTypeForExpression)))) (eos ;)))) (sourceElement (statement (functionDeclaration function wrapper ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable Proto) = (singleExpression (anoymousFunction function ( ) { functionBody })))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable oldProto))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression new (singleExpression Proto)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) [ (expressionSequence (singleExpression (singleExpression (singleExpression (literal '"')) + (singleExpression i)) + (singleExpression (literal '"')))) ]) = (singleExpression (literal (numericLiteral 20))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression x))) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression oldProto) = (singleExpression Proto))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression Proto) = (singleExpression (anoymousFunction function ( ) { functionBody })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Proto) . (identifierName prototype)) . (identifierName __proto__)) = (singleExpression (singleExpression oldProto) . (identifierName prototype)))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (objectLiteral { })))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression wrapper) (arguments ( )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable types) = (singleExpression (singleExpression findTypeForExpression) (arguments ( (argument (singleExpression wrapper)) , (argument (singleExpression (literal "x;"))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression types)) )))) (eos ;))))) <EOF>)