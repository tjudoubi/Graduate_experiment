(program (sourceElements (sourceElement (statement (classDeclaration class A (classTail { })))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (classDeclaration class B (classTail extends (singleExpression A) { (classElement (methodDefinition (propertyName (identifierName constructor)) ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression b) ? (singleExpression this) : (singleExpression (objectLiteral { })))))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression a)) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable val) = (singleExpression (singleExpression (singleExpression f) (arguments ( ))) == (singleExpression (singleExpression super) (arguments ( )))))) (eos ;)))) })) else (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) (arguments ( )))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable val) = (singleExpression (singleExpression f) (arguments ( ))))) (eos ;)))) }))))))) })) })))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (block { (statementList (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression new (singleExpression (singleExpression B) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal true))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable a) = (singleExpression new (singleExpression (singleExpression B) (arguments ( (argument (singleExpression (literal false))) , (argument (singleExpression (literal true))) )))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable c) = (singleExpression new (singleExpression (singleExpression B) (arguments ( (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) )))))) (eos ;)))) })))))) <EOF>)