(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable array) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName push)) (arguments ( (argument (singleExpression new (singleExpression (singleExpression Promise) (arguments ( (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable resolve)) , (formalParameterArg (assignable reject))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression resolve) (arguments ( (argument (singleExpression i)) )))) (eos ;)))))) }))) ))))) )))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression Promise) . (identifierName all)) (arguments ( (argument (singleExpression array)) ))) . (identifierName then)) (arguments ( (argument (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable results))) ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression results) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression results) [ (expressionSequence (singleExpression i)) ])) , (argument (singleExpression i)) )))) (eos ;)))))))) }))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression drainMicrotasks) (arguments ( )))) (eos ;))))) <EOF>)