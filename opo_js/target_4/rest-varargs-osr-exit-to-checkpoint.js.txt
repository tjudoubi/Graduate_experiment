(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) (eos ;)))) (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (lastFormalParameterArg ... (singleExpression rest))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression rest) . (identifierName length))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function bar ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (lastFormalParameterArg ... (singleExpression rest))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression foo) . (identifierName call)) (arguments ( (argument ... (singleExpression rest)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier let) (variableDeclaration (assignable array) = (singleExpression new (singleExpression (singleExpression Array) (arguments ( (argument (singleExpression (literal (numericLiteral 10)))) )))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier let) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e5))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier let) (variableDeclaration (assignable result) = (singleExpression (singleExpression bar) (arguments ( (argument ... (singleExpression array)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) !== (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression array) . (identifierName length)) - (singleExpression (singleExpression bar) . (identifierName length))) - (singleExpression (singleExpression foo) . (identifierName length))) - (singleExpression (literal (numericLiteral 1)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression i) + (singleExpression (literal " "))) + (singleExpression result))) ))))) (eos ;)))))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression array) . (identifierName length)) = (singleExpression (literal (numericLiteral 10000))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression bar) (arguments ( (argument ... (singleExpression array)) ))) !== (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression array) . (identifierName length)) - (singleExpression (singleExpression bar) . (identifierName length))) - (singleExpression (singleExpression foo) . (identifierName length))) - (singleExpression (literal (numericLiteral 1)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( ))))) (eos ;))))))) <EOF>)