(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal 'prototype')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName prototype)) ( ) { functionBody }) , (propertyAssignment (getter get (propertyName [ (singleExpression name) ])) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal 'prototype'))) )))) )))) , (argument (singleExpression (literal `{"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal 'prototype')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName [ (singleExpression name) ])) ( ) { functionBody }) , (propertyAssignment (propertyName (identifierName prototype)) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal 'prototype'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal 'prototype')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName [ (singleExpression name) ]) ( ) { functionBody }) , (propertyAssignment (getter get (propertyName (identifierName prototype))) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal 'prototype'))) )))) )))) , (argument (singleExpression (literal `{"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal 'prototype')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName (identifierName prototype))) ( ) { functionBody }) , (propertyAssignment (propertyName [ (singleExpression name) ]) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal 'prototype'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName __proto__)) ( ) { functionBody }) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '__proto__'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getPrototypeOf)) (arguments ( (argument (singleExpression object)) )))) , (argument (singleExpression (singleExpression Object) . (identifierName prototype))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal '__proto__')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName [ (singleExpression name) ]) ( ) { functionBody }) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '__proto__'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getPrototypeOf)) (arguments ( (argument (singleExpression object)) )))) , (argument (singleExpression (singleExpression Object) . (identifierName prototype))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal '42')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (numericLiteral 42)) ( ) { functionBody }) , (propertyAssignment (getter get (propertyName [ (singleExpression name) ])) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '42'))) )))) )))) , (argument (singleExpression (literal `{"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal '42')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName [ (singleExpression name) ])) ( ) { functionBody }) , (propertyAssignment (propertyName (numericLiteral 42)) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '42'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal '42')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (propertyName [ (singleExpression name) ]) ( ) { functionBody }) , (propertyAssignment (getter get (propertyName (numericLiteral 42))) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '42'))) )))) )))) , (argument (singleExpression (literal `{"enumerable":true,"configurable":true}`))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression name) = (singleExpression (literal '42')))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression object) = (singleExpression (objectLiteral { (propertyAssignment (getter get (propertyName (numericLiteral 42))) ( ) { functionBody }) , (propertyAssignment (propertyName [ (singleExpression name) ]) ( ) { functionBody }) , })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression JSON) . (identifierName stringify)) (arguments ( (argument (singleExpression (singleExpression (singleExpression Object) . (identifierName getOwnPropertyDescriptor)) (arguments ( (argument (singleExpression object)) , (argument (singleExpression (literal '42'))) )))) )))) , (argument (singleExpression (literal `{"writable":true,"enumerable":true,"configurable":true}`))) )))) (eos ;)))) })))) <EOF>)