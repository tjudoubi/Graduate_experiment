(program (sourceElements (sourceElement (statement (functionDeclaration function mathFloorOnIntegers ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorOnIntegers)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function mathFloorOnDoubles ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorOnDoubles)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function mathFloorOnBooleans ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorOnBooleans)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 1))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnIntegers) (arguments ( (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnIntegers(")) + (singleExpression i)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnIntegers) (arguments ( (argument (singleExpression - (singleExpression i))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression - (singleExpression i)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnIntegers(")) + (singleExpression - (singleExpression i))) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleLow) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.4)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression doubleLow)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnDoubles(")) + (singleExpression doubleLow)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleHigh) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.6)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression doubleHigh)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnDoubles(")) + (singleExpression doubleHigh)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleMid) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.5)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression doubleMid)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnDoubles(")) + (singleExpression doubleMid)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.6))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression - (singleExpression (literal (numericLiteral 1.0)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(-0.6) = ")) + (singleExpression flooredValue))) ))))) (eos ;)))))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnIntegers) (arguments ( (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnIntegers(")) + (singleExpression i)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnIntegers) (arguments ( (argument (singleExpression - (singleExpression i))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression - (singleExpression i)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnIntegers(-")) + (singleExpression i)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.4))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression - (singleExpression (literal (numericLiteral 1.00)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(-0.4) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.5))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression - (singleExpression (literal (numericLiteral 1.0)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(-0.5) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression flooredValue) === (singleExpression (literal (numericLiteral 0)))) && (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression flooredValue))) )) === (singleExpression - (singleExpression Infinity))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(-0) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) === (singleExpression flooredValue))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(NaN) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression (singleExpression Number) . (identifierName POSITIVE_INFINITY))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression (singleExpression Number) . (identifierName POSITIVE_INFINITY)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(Number.POSITIVE_INFINITY) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorOnDoubles) (arguments ( (argument (singleExpression (singleExpression Number) . (identifierName NEGATIVE_INFINITY))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression (singleExpression Number) . (identifierName NEGATIVE_INFINITY)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorOnDoubles(Number.NEGATIVE_INFINITY) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable boolean) = (singleExpression ! (singleExpression ! (singleExpression ( (expressionSequence (singleExpression (singleExpression i) % (singleExpression (literal (numericLiteral 2))))) )))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredBoolean) = (singleExpression (singleExpression mathFloorOnBooleans) (arguments ( (argument (singleExpression boolean)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredBoolean) != (singleExpression boolean))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorOnDoubles(")) + (singleExpression boolean)) + (singleExpression (literal ") = "))) + (singleExpression flooredBoolean))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function uselessMathFloor ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (singleExpression value) | (singleExpression (literal (numericLiteral 0))))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression uselessMathFloor)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression i)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "uselessMathFloor(")) + (singleExpression i)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleLow) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.4)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression doubleLow)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "uselessMathFloor(")) + (singleExpression doubleLow)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleHigh) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.6)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression doubleHigh)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "uselessMathFloor(")) + (singleExpression doubleHigh)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleMid) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.5)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression doubleMid)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "uselessMathFloor(")) + (singleExpression doubleMid)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.4))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "uselessMathFloor(-0.4) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.5))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "uselessMathFloor(-0.5) = ")) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression uselessMathFloor) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.6))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "uselessMathFloor(-0.6) = ")) + (singleExpression flooredValue))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function mathFloorWithOverflow ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorWithOverflow)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable bigValue) = (singleExpression (literal (numericLiteral 1000000000000))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorWithOverflow) (arguments ( (argument (singleExpression bigValue)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression bigValue))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorWithOverflow(")) + (singleExpression bigValue)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function mathFloorConsumedAsDouble ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) ))) * (singleExpression (literal (numericLiteral 0.5))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorConsumedAsDouble)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleValue) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.1)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorConsumedAsDouble) (arguments ( (argument (singleExpression doubleValue)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression ( (expressionSequence (singleExpression (singleExpression i) * (singleExpression (literal (numericLiteral 0.5))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorConsumedAsDouble(")) + (singleExpression doubleValue)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleValue) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.6)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorConsumedAsDouble) (arguments ( (argument (singleExpression doubleValue)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression ( (expressionSequence (singleExpression (singleExpression i) * (singleExpression (literal (numericLiteral 0.5))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorConsumedAsDouble(")) + (singleExpression doubleValue)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function mathFloorDoesNotCareAboutMinusZero ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) ))) | (singleExpression (literal (numericLiteral 0))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorDoesNotCareAboutMinusZero)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable doubleMid) = (singleExpression (singleExpression i) + (singleExpression (literal (numericLiteral 0.5)))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable flooredValue) = (singleExpression (singleExpression mathFloorDoesNotCareAboutMinusZero) (arguments ( (argument (singleExpression doubleMid)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression flooredValue) !== (singleExpression i))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (singleExpression (singleExpression (literal "mathFloorDoesNotCareAboutMinusZero(")) + (singleExpression doubleMid)) + (singleExpression (literal ") = "))) + (singleExpression flooredValue))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function mathFloorNoArguments ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorNoArguments)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function mathFloorTooManyArguments ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable c))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression a)) , (argument (singleExpression b)) , (argument (singleExpression c)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorTooManyArguments)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression mathFloorNoArguments) (arguments ( ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorNoArguments() = ")) + (singleExpression value))) ))))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression mathFloorTooManyArguments) (arguments ( (argument (singleExpression (literal (numericLiteral 2.1)))) , (argument (singleExpression (literal (numericLiteral 3)))) , (argument (singleExpression (literal (numericLiteral 5)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 2))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorTooManyArguments() = ")) + (singleExpression value))) ))))) (eos ;)))))) }))))) (sourceElement (statement (functionDeclaration function testMathFloorOnConstants ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 0))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(0) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0))))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression value) === (singleExpression (literal (numericLiteral 0)))) && (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression value))) )) === (singleExpression - (singleExpression Infinity))))) )))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(-0) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 1))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(1) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 1))))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression - (singleExpression (literal (numericLiteral 1)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(-1) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(42) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 42.2))))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression - (singleExpression (literal (numericLiteral 43)))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(-42.2) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression NaN)) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) === (singleExpression value))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(NaN) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (singleExpression Number) . (identifierName POSITIVE_INFINITY))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression Infinity))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(Number.POSITIVE_INFINITY) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (singleExpression Number) . (identifierName NEGATIVE_INFINITY))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression - (singleExpression Infinity)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(Number.NEGATIVE_INFINITY) = ")) + (singleExpression value))) ))))) (eos ;)))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression (singleExpression Math) . (identifierName E))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 2))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Math.floor(Math.E) = ")) + (singleExpression value))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression testMathFloorOnConstants)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testMathFloorOnConstants) (arguments ( )))) (eos ;)))) }))))) (sourceElement (statement (functionDeclaration function mathFloorStructTransition ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression value)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression mathFloorStructTransition)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression mathFloorStructTransition) (arguments ( (argument (singleExpression (literal (numericLiteral 42.5)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorStructTransition(42.5) = ")) + (singleExpression value))) ))))) (eos ;)))))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression arguments) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) + (singleExpression (literal (numericLiteral 5))))) (eos ;)))))) })))) eos))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression mathFloorStructTransition) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) !== (singleExpression (literal (numericLiteral 47))))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "mathFloorStructTransition(42) after transition = ")) + (singleExpression value))) ))))) (eos ;))))))) <EOF>)