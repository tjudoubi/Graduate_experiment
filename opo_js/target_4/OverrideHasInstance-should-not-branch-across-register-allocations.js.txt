(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression this) . (identifierName Function)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable test) = (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Math) . (identifierName cos)) (arguments ( (argument (singleExpression (singleExpression (literal "0")) instanceof (singleExpression arguments))) )))) eos))))) })))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable k) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression k) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression k))) ) (statement (block { (statementList (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression test) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { }))))) })))))) <EOF>)