(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function * generatorFunction ( ) { functionBody }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression generator) = (singleExpression (singleExpression generatorFunction) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression generator) instanceof (singleExpression generatorFunction))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression (singleExpression generator) . (identifierName __proto__)))) , (argument (singleExpression (literal 'object'))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression generator) . (identifierName __proto__))) , (argument (singleExpression (singleExpression generatorFunction) . (identifierName prototype))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression GeneratorPrototype) = (singleExpression (singleExpression (singleExpression generator) . (identifierName __proto__)) . (identifierName __proto__)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression GeneratorFunctionPrototype) = (singleExpression (singleExpression generatorFunction) . (identifierName __proto__)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression GeneratorFunction) = (singleExpression (singleExpression (singleExpression generatorFunction) . (identifierName __proto__)) . (identifierName constructor)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression GeneratorFunction) . (identifierName prototype))) , (argument (singleExpression GeneratorFunctionPrototype)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression generatorFunction) instanceof (singleExpression GeneratorFunction))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression GeneratorFunction) . (identifierName __proto__))) , (argument (singleExpression Function)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression GeneratorFunctionPrototype) . (identifierName __proto__))) , (argument (singleExpression (singleExpression Function) . (identifierName prototype))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression GeneratorFunctionPrototype) . (identifierName prototype))) , (argument (singleExpression GeneratorPrototype)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression GeneratorPrototype) . (identifierName constructor))) , (argument (singleExpression GeneratorFunctionPrototype)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression arrayIterator) = (singleExpression (singleExpression (singleExpression (arrayLiteral [ elementList ])) [ (expressionSequence (singleExpression (singleExpression Symbol) . (identifierName iterator))) ]) (arguments ( ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ArrayIteratorPrototype) = (singleExpression (singleExpression arrayIterator) . (identifierName __proto__)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression let)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression IteratorPrototype) = (singleExpression (singleExpression ArrayIteratorPrototype) . (identifierName __proto__)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression IteratorPrototype)) , (argument (singleExpression (singleExpression GeneratorPrototype) . (identifierName __proto__))) )))) (eos ;))))) <EOF>)