(program (sourceElements (sourceElement (statement (functionDeclaration function firstCareAboutZeroSecondDoesNot ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable resultA) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression a)) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable resultB) = (singleExpression (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression a)) ))) | (singleExpression (literal (numericLiteral 0)))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName resultA)) : (singleExpression resultA)) , (propertyAssignment (propertyName (identifierName resultB)) : (singleExpression resultB)) }))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression firstCareAboutZeroSecondDoesNot)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function firstDoNotCareAboutZeroSecondDoes ( (formalParameterList (formalParameterArg (assignable a))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable resultA) = (singleExpression (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression a)) ))) | (singleExpression (literal (numericLiteral 0)))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable resultB) = (singleExpression (singleExpression (singleExpression Math) . (identifierName floor)) (arguments ( (argument (singleExpression a)) ))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName resultA)) : (singleExpression resultA)) , (propertyAssignment (propertyName (identifierName resultB)) : (singleExpression resultB)) }))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression firstDoNotCareAboutZeroSecondDoes)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function warmup ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression firstCareAboutZeroSecondDoesNot) (arguments ( (argument (singleExpression (singleExpression (literal (numericLiteral 42.6))) + (singleExpression i))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression firstDoNotCareAboutZeroSecondDoes) (arguments ( (argument (singleExpression (singleExpression (literal (numericLiteral 42.4))) + (singleExpression i))) )))) (eos ;)))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression warmup) (arguments ( )))) (eos ;)))) (sourceElement (statement (functionDeclaration function verifyNegativeZeroIsPreserved ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result1) = (singleExpression (singleExpression firstCareAboutZeroSecondDoesNot) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.1))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result1) . (identifierName resultA))) !== (singleExpression - (singleExpression (literal (numericLiteral 1)))))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(-0.1), resultA = ")) + (singleExpression (singleExpression result1) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result1) . (identifierName resultB))) !== (singleExpression - (singleExpression (literal (numericLiteral 1)))))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(-0.1), resultB = ")) + (singleExpression (singleExpression result1) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result2) = (singleExpression (singleExpression firstDoNotCareAboutZeroSecondDoes) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.1))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result2) . (identifierName resultA))) !== (singleExpression - (singleExpression (literal (numericLiteral 1)))))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(-0.1), resultA = ")) + (singleExpression (singleExpression result1) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result2) . (identifierName resultB))) !== (singleExpression - (singleExpression (literal (numericLiteral 1)))))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(-0.1), resultB = ")) + (singleExpression (singleExpression result1) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result3) = (singleExpression (singleExpression firstCareAboutZeroSecondDoesNot) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.0))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result3) . (identifierName resultA))) !== (singleExpression - (singleExpression Infinity)))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(-0.0), resultA = ")) + (singleExpression (singleExpression result3) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result3) . (identifierName resultB))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(-0.0), resultB = ")) + (singleExpression (singleExpression result3) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result4) = (singleExpression (singleExpression firstDoNotCareAboutZeroSecondDoes) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0.0))))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result4) . (identifierName resultA))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(-0.0), resultA = ")) + (singleExpression (singleExpression result4) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result4) . (identifierName resultB))) !== (singleExpression - (singleExpression Infinity)))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(-0.0), resultB = ")) + (singleExpression (singleExpression result4) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result5) = (singleExpression (singleExpression firstCareAboutZeroSecondDoesNot) (arguments ( (argument (singleExpression (literal (numericLiteral 0.0)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result5) . (identifierName resultA))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(0.0), resultA = ")) + (singleExpression (singleExpression result5) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result5) . (identifierName resultB))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(0.0), resultB = ")) + (singleExpression (singleExpression result5) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result6) = (singleExpression (singleExpression firstDoNotCareAboutZeroSecondDoes) (arguments ( (argument (singleExpression (literal (numericLiteral 0.0)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result6) . (identifierName resultA))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(0.0), resultA = ")) + (singleExpression (singleExpression result6) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result6) . (identifierName resultB))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(0.0), resultB = ")) + (singleExpression (singleExpression result6) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result7) = (singleExpression (singleExpression firstCareAboutZeroSecondDoesNot) (arguments ( (argument (singleExpression (literal (numericLiteral 0.1)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result7) . (identifierName resultA))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(0.1), resultA = ")) + (singleExpression (singleExpression result7) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result7) . (identifierName resultB))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstCareAboutZeroSecondDoesNot(0.1), resultB = ")) + (singleExpression (singleExpression result7) . (identifierName resultB)))) ))))) (eos ;)))) })))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable result8) = (singleExpression (singleExpression firstDoNotCareAboutZeroSecondDoes) (arguments ( (argument (singleExpression (literal (numericLiteral 0.1)))) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result8) . (identifierName resultA))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(0.1), resultA = ")) + (singleExpression (singleExpression result8) . (identifierName resultA)))) ))))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (literal (numericLiteral 1))) / (singleExpression (singleExpression result8) . (identifierName resultB))) !== (singleExpression Infinity))) ) (statement (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "Failed firstDoNotCareAboutZeroSecondDoes(0.1), resultB = ")) + (singleExpression (singleExpression result8) . (identifierName resultB)))) ))))) (eos ;)))) }))))) }))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression verifyNegativeZeroIsPreserved) (arguments ( )))) (eos ;))))) <EOF>)