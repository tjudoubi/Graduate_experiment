(program (sourceElements (sourceElement (statement (functionDeclaration function unreachable ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "NG"))) ))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function * gen ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression unreachable) (arguments ( )))) (eos ;)))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable error) = (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "OK"))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable thrown) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword throw)))) (arguments ( (argument (singleExpression error)) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression thrown) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression thrown) !== (singleExpression error))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression unreachable) (arguments ( )))) (eos ;))))))) <EOF>)