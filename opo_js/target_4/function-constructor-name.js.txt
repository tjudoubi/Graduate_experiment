(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable GeneratorFunction) = (singleExpression (singleExpression (anoymousFunction function * ( ) { functionBody })) . (identifierName constructor)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable AsyncFunction) = (singleExpression (singleExpression (anoymousFunction async function ( ) { functionBody })) . (identifierName constructor)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable AsyncGeneratorFunction) = (singleExpression (singleExpression (anoymousFunction async function * ( ) { functionBody })) . (identifierName constructor)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable f) = (singleExpression (singleExpression Function) (arguments ( (argument (singleExpression (literal `return 42`))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression anonymous))) , (argument (singleExpression (literal `undefined`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression f) . (identifierName toString)) (arguments ( )))) , (argument (singleExpression (literal `function anonymous() {return 42}`))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable gf) = (singleExpression (singleExpression GeneratorFunction) (arguments ( (argument (singleExpression (literal `return 42`))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression anonymous))) , (argument (singleExpression (literal `undefined`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression gf) . (identifierName toString)) (arguments ( )))) , (argument (singleExpression (literal `function* anonymous() {return 42}`))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable af) = (singleExpression (singleExpression AsyncFunction) (arguments ( (argument (singleExpression (literal `return 42`))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression anonymous))) , (argument (singleExpression (literal `undefined`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression af) . (identifierName toString)) (arguments ( )))) , (argument (singleExpression (literal `async function anonymous() {return 42}`))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable agf) = (singleExpression (singleExpression AsyncGeneratorFunction) (arguments ( (argument (singleExpression (literal `return 42`))) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression typeof (singleExpression anonymous))) , (argument (singleExpression (literal `undefined`))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression (singleExpression agf) . (identifierName toString)) (arguments ( )))) , (argument (singleExpression (literal `async function* anonymous() {return 42}`))) )))) (eos ;))))) <EOF>)