(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable foo) = (singleExpression (anoymousFunction function ( (formalParameterList (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression o) . (identifierName baa))) (eos ;)))))) })))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression ( (expressionSequence (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable letters) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "a"))) , (arrayElement (singleExpression (literal "b"))) , (arrayElement (singleExpression (literal "c"))) , (arrayElement (singleExpression (literal "d"))) , (arrayElement (singleExpression (literal "e"))) , (arrayElement (singleExpression (literal "f"))) , (arrayElement (singleExpression (literal "g"))) , (arrayElement (singleExpression (literal "h"))) , (arrayElement (singleExpression (literal "i"))) , (arrayElement (singleExpression (literal "j"))) , (arrayElement (singleExpression (literal "k"))) , (arrayElement (singleExpression (literal "l"))) , (arrayElement (singleExpression (literal "m"))) , (arrayElement (singleExpression (literal "n"))) , (arrayElement (singleExpression (literal "o"))) , (arrayElement (singleExpression (literal "p"))) , (arrayElement (singleExpression (literal "q"))) , (arrayElement (singleExpression (literal "r"))) , (arrayElement (singleExpression (literal "s"))) , (arrayElement (singleExpression (literal "t"))) , (arrayElement (singleExpression (literal "u"))) , (arrayElement (singleExpression (literal "v"))) , (arrayElement (singleExpression (literal "w"))) , (arrayElement (singleExpression (literal "x"))) , (arrayElement (singleExpression (literal "y"))) , (arrayElement (singleExpression (literal "z")))) ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable properties) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (singleExpression letters) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) < (singleExpression (singleExpression letters) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression j))) ) (statement (block { (statementList (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable k) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression k) < (singleExpression (singleExpression letters) . (identifierName length)))) ; (expressionSequence (singleExpression ++ (singleExpression k))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable property) = (singleExpression (singleExpression (singleExpression (singleExpression letters) [ (expressionSequence (singleExpression i)) ]) + (singleExpression (singleExpression letters) [ (expressionSequence (singleExpression j)) ])) + (singleExpression (singleExpression letters) [ (expressionSequence (singleExpression k)) ])))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression property)) ]) = (singleExpression i))) (eos ;)))) }))))) }))))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable keys) = (singleExpression (singleExpression (singleExpression Object) . (identifierName keys)) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression keys) . (identifierName sort)) (arguments ( )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (singleExpression (singleExpression keys) . (identifierName length)) - (singleExpression (literal (numericLiteral 1)))))) ; (expressionSequence (singleExpression (singleExpression i) >= (singleExpression (singleExpression (singleExpression keys) . (identifierName length)) - (singleExpression (literal (numericLiteral 8000)))))) ; (expressionSequence (singleExpression (singleExpression i) --)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression delete (singleExpression (singleExpression o) [ (expressionSequence (singleExpression (singleExpression keys) [ (expressionSequence (singleExpression i)) ])) ]))) (eos ;)))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable sum) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable iVal) = (singleExpression (singleExpression (singleExpression letters) . (identifierName indexOf)) (arguments ( (argument (singleExpression (literal "b"))) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable niters) = (singleExpression (literal (numericLiteral 1000))))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression niters))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression sum) (assignmentOperator +=) (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression o)) ))))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression sum) != (singleExpression (singleExpression iVal) * (singleExpression niters)))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal "incorrect result: ")) + (singleExpression sum))) ))))) (eos ;)))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fullGC) (arguments ( )))) (eos ;)))))) }))) )) (arguments ( )))) (eos ;))))) <EOF>)