(program (sourceElements (sourceElement (statement (functionDeclaration function assert ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable e)) , (formalParameterArg (assignable m))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression a) !== (singleExpression e))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression m)) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function testEquals ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable e))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression a) == (singleExpression b))) , (argument (singleExpression e)) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression a) + (singleExpression (literal " == "))) + (singleExpression b)) + (singleExpression (literal " should be "))) + (singleExpression e))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression b) == (singleExpression a))) , (argument (singleExpression e)) , (argument (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression b) + (singleExpression (literal " == "))) + (singleExpression a)) + (singleExpression (literal " should be "))) + (singleExpression e))) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function testEqualsWithMessage ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable e)) , (formalParameterArg (assignable m))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression a) == (singleExpression b))) , (argument (singleExpression e)) , (argument (singleExpression m)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression b) == (singleExpression a))) , (argument (singleExpression e)) , (argument (singleExpression m)) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1928392129312n)))) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 817283912931n)))) , (argument (singleExpression (literal (bigintLiteral 817283912931n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xFFD817283AF9129E31n)))) , (argument (singleExpression (literal (bigintLiteral 0xFFD817283AF9129E31n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xAFFD817283AF9129E31n)))) , (argument (singleExpression (literal (bigintLiteral 0xFFD817283AF9129E31n)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 4719490697266344402481n)))) , (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-4719490697266344402481"))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-4719490697266344402481"))) )))) , (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "4719490697266344402481"))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-4719490697266344402481"))) )))) , (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-4719490697266344402481"))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-17"))) )))) , (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-17"))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal "1"))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1928392129312n)))) , (argument (singleExpression (literal "1"))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal "1"))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal "0"))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 817283912931n)))) , (argument (singleExpression (literal "817283912931"))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xFFD817283AF9129E31n)))) , (argument (singleExpression (literal "4719490697266344402481"))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xAFFD817283AF9129E31n)))) , (argument (singleExpression (literal "4719490697266344402481"))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal (numericLiteral 0)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 0))))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression - (singleExpression (literal (numericLiteral 0))))) , (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal (numericLiteral 0.000000000001)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal (numericLiteral 0.999999999999)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal (numericLiteral 1)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (singleExpression Number) . (identifierName MIN_VALUE))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression - (singleExpression (singleExpression Number) . (identifierName MIN_VALUE)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-10"))) )))) , (argument (singleExpression (singleExpression Number) . (identifierName MIN_VALUE))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression Number) . (identifierName MAX_VALUE))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression - (singleExpression (singleExpression Number) . (identifierName MAX_VALUE)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xfffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn)))) , (argument (singleExpression (singleExpression Number) . (identifierName MAX_VALUE))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000n)))) , (argument (singleExpression (singleExpression Number) . (identifierName MAX_VALUE))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001n)))) , (argument (singleExpression (singleExpression Number) . (identifierName MAX_VALUE))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (numericLiteral 230000000000000000000)))) , (argument (singleExpression (literal (bigintLiteral 230000000000000000000n)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 10n)))) , (argument (singleExpression NaN)) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 10n)))) , (argument (singleExpression undefined)) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 10n)))) , (argument (singleExpression (literal null))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 10n)))) , (argument (singleExpression Infinity)) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 10n)))) , (argument (singleExpression - (singleExpression Infinity))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-2147483648"))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 2147483648))))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-2147483647"))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 2147483648))))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "2147483647"))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 2147483648))))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "2147483648"))) )))) , (argument (singleExpression - (singleExpression (literal (numericLiteral 2147483648))))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "2147483647"))) )))) , (argument (singleExpression (literal (numericLiteral 2147483647)))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "2147483648"))) )))) , (argument (singleExpression (literal (numericLiteral 2147483647)))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-1"))) )))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (singleExpression BigInt) (arguments ( (argument (singleExpression (literal "-1"))) )))) , (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal true))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) , (argument (singleExpression (literal true))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) )))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) , (argument (singleExpression (singleExpression Object) (arguments ( (argument (singleExpression (literal (bigintLiteral 2n)))) )))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (objectLiteral { }))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (bigintLiteral 0n)))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (bigintLiteral 1n)))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "0"))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "1"))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 900719925474099101n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (bigintLiteral 900719925474099101n)))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 900719925474099101n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (bigintLiteral 900719925474099102n)))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 900719925474099101n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "900719925474099101"))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal true))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEquals) (arguments ( (argument (singleExpression (literal (bigintLiteral 900719925474099101n)))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal "900719925474099102"))) (eos ;)))))) }))) }))) , (argument (singleExpression (literal false))) )))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName valueOf)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "my error"))) ))))) (eos ;)))))) }))) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) == (singleExpression (literal (bigintLiteral 1n))))) (eos ;))) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Exception in ToPrimitive not catched"))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) . (identifierName message))) , (argument (singleExpression (literal "my error"))) , (argument (singleExpression (literal "Wrong exception in ToPrimitive"))) )))) (eos ;)))) }))))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName toString)) : (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "my error"))) ))))) (eos ;)))))) }))) })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression o) == (singleExpression (literal (bigintLiteral 1n))))) (eos ;))) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "Exception in ToString not catched"))) ))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression assert) (arguments ( (argument (singleExpression (singleExpression e) . (identifierName message))) , (argument (singleExpression (literal "my error"))) , (argument (singleExpression (literal "Wrong exception in ToString"))) )))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEqualsWithMessage) (arguments ( (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal "1"))) )))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal "0n == Symbol(1)"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEqualsWithMessage) (arguments ( (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal "1"))) )))) , (argument (singleExpression (literal (bigintLiteral 0n)))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal "Symbol(1) == 0n"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEqualsWithMessage) (arguments ( (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal "1"))) )))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal "1n == Symbol(1)"))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression testEqualsWithMessage) (arguments ( (argument (singleExpression (singleExpression Symbol) (arguments ( (argument (singleExpression (literal "1"))) )))) , (argument (singleExpression (literal (bigintLiteral 1n)))) , (argument (singleExpression (literal false))) , (argument (singleExpression (literal "Symbol(1) == 1n"))) )))) (eos ;))))) <EOF>)