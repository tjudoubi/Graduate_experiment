(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable fe) = (singleExpression (literal "f")))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (iterationStatement for ( (expressionSequence (singleExpression (singleExpression i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 25))))) ; (expressionSequence (singleExpression (singleExpression i) ++)) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression fe) (assignmentOperator +=) (singleExpression fe))) (eos ;))))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable fu) = (singleExpression new (singleExpression (singleExpression Function) (arguments ( (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression fe)) , (argument (singleExpression (literal "done"))) )))))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { })))))) <EOF>)