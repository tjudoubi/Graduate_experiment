(program (sourceElements (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a0)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a1)) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a2)) = (singleExpression (literal (numericLiteral 2))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a3)) = (singleExpression (literal (numericLiteral 3))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a4)) = (singleExpression (literal (numericLiteral 4))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a5)) = (singleExpression (literal (numericLiteral 5))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a6)) = (singleExpression (literal (numericLiteral 6))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a7)) = (singleExpression (literal (numericLiteral 7))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a8)) = (singleExpression (literal (numericLiteral 8))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a9)) = (singleExpression (literal (numericLiteral 9))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression x) . (identifierName a10)) = (singleExpression (literal (numericLiteral 10))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable c) = (singleExpression (objectLiteral { })))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 100000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable b) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression b)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression c) = (singleExpression b))) (eos ;)))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable j) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression j) <= (singleExpression (literal (numericLiteral 10))))) ; (expressionSequence (singleExpression ++ (singleExpression j))) ) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression c) [ (expressionSequence (singleExpression (singleExpression (literal 'a')) + (singleExpression j))) ]) != (singleExpression j))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error ")) + (singleExpression (singleExpression c) [ (expressionSequence (singleExpression (singleExpression (literal 'a')) + (singleExpression j))) ]))) (eos ;))))))))) <EOF>)