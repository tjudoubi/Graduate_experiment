(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable createBuiltin) = (singleExpression (singleExpression $vm) . (identifierName createBuiltin)))) (eos ;)))) (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (singleExpression (literal 'bad value: ')) + (singleExpression actual))) ))))) (eos ;)))))))) }))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable builtin) = (singleExpression (singleExpression createBuiltin) (arguments ( (argument (singleExpression (literal `(function (a) {    return @argument(5);})`))) ))))) (eos ;)))) (sourceElement (statement (functionDeclaration function inlining ( (formalParameterList (formalParameterArg (assignable a)) , (formalParameterArg (assignable b)) , (formalParameterArg (assignable c))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression builtin) . (identifierName call)) (arguments ( (argument (singleExpression this)) , (argument ... (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3)))) , (arrayElement (singleExpression (literal (numericLiteral 4)))) , (arrayElement (singleExpression (literal (numericLiteral 5)))) , (arrayElement (singleExpression (literal (numericLiteral 6)))) , (arrayElement (singleExpression (literal (numericLiteral 7))))) ]))) )))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression inlining)) )))) (eos ;)))) (sourceElement (statement (functionDeclaration function escape ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression value)) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression escape)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1e4))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression escape) (arguments ( (argument (singleExpression (singleExpression inlining) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) )))) , (argument (singleExpression (literal (numericLiteral 6)))) )))) (eos ;)))))))) })) (arguments ( )))) ))) (eos ;))))) <EOF>)