(program (sourceElements (sourceElement (statement (functionDeclaration function shouldBe ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable expected))) ) { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression actual) !== (singleExpression expected))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `bad value: ${String(actual)}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (functionDeclaration function shouldBeIteratorResult ( (formalParameterList (formalParameterArg (assignable actual)) , (formalParameterArg (assignable (objectLiteral { (propertyAssignment (singleExpression value)) , (propertyAssignment (singleExpression done)) })))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression actual) . (identifierName value))) , (argument (singleExpression value)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBe) (arguments ( (argument (singleExpression (singleExpression actual) . (identifierName done))) , (argument (singleExpression done)) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function unreachable ( ) { (functionBody (sourceElements (sourceElement (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'unreachable'))) ))))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function shouldThrow ( (formalParameterList (formalParameterArg (assignable func)) , (formalParameterArg (assignable errorMessage))) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable errorThrown) = (singleExpression (literal false)))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable error) = (singleExpression (literal null)))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression func) (arguments ( )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression errorThrown) = (singleExpression (literal true)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression error) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression errorThrown))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal 'not thrown'))) ))))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression String) (arguments ( (argument (singleExpression error)) ))) !== (singleExpression errorMessage))) ) (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal `bad error: ${String(error)}`))) ))))) (eos ;)))))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function * gen ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression yield)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression yield)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 20)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression yield)) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 20)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal false))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 20)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 20)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 20)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 20)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function * gen ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function * gen ( ) { functionBody }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function * gen ( ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression yield)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))) }) (finallyProduction finally (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (literal (numericLiteral 400)))) (eos ;)))) }))))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal false))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 400)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))))) })) (arguments ( )))) ))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (anoymousFunction function ( ) { (functionBody (sourceElements (sourceElement (statement (functionDeclaration function * gen ( ) { (functionBody (sourceElements (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression yield)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (literal (numericLiteral 42)))) (eos ;)))) }) (finallyProduction finally (block { (statementList (statement (throwStatement throw (expressionSequence (singleExpression new (singleExpression (singleExpression Error) (arguments ( (argument (singleExpression (literal "thrown"))) ))))) (eos ;)))) }))))))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal false))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldThrow) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) ))))))) , (argument (singleExpression (literal `Error: thrown`))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))) (sourceElement (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression let)) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression g) = (singleExpression (singleExpression gen) (arguments ( ))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 0)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 0)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName next)) (arguments ( )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression undefined)) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression shouldBeIteratorResult) (arguments ( (argument (singleExpression (singleExpression (singleExpression g) . (identifierName (reservedWord (keyword return)))) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) )))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 42)))) , (propertyAssignment (propertyName (identifierName done)) : (singleExpression (literal true))) }))) )))) (eos ;)))) }))))) })) (arguments ( )))) ))) (eos ;))))) <EOF>)