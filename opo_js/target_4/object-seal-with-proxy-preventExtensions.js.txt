(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable x) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 10))))) ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable visited) = (singleExpression (arrayLiteral [ elementList ])))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable proxy) = (singleExpression new (singleExpression (singleExpression Proxy) (arguments ( (argument (singleExpression x)) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName preventExtensions)) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression visited) . (identifierName push)) (arguments ( (argument (singleExpression (literal "proxy_preventExtensions"))) )))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (literal false))) (eos ;)))))) }) }))) )))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exception))) (eos ;)))) (sourceElement (statement (tryStatement try (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression visited) . (identifierName push)) (arguments ( (argument (singleExpression (literal "before_seal"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName seal)) (arguments ( (argument (singleExpression proxy)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression visited) . (identifierName push)) (arguments ( (argument (singleExpression (literal "after_seal"))) )))) (eos ;)))) }) (catchProduction catch ( (assignable e) ) (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression visited) . (identifierName push)) (arguments ( (argument (singleExpression (literal "catch"))) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression exception) = (singleExpression e))) (eos ;)))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable exceptionStr) = (singleExpression (singleExpression (literal "")) + (singleExpression exception)))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression ! (singleExpression (singleExpression (singleExpression exceptionStr) . (identifierName startsWith)) (arguments ( (argument (singleExpression (literal "TypeError:"))) ))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (literal "Did not throw expected TypeError"))) (eos ;)))))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression visited) != (singleExpression (literal "before_seal,proxy_preventExtensions,catch")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "ERROR: visited = ")) + (singleExpression visited))) (eos ;))))))) <EOF>)