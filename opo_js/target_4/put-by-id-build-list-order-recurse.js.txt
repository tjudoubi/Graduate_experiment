(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable count) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (functionDeclaration function setter ( (formalParameterList (formalParameterArg (assignable value))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression Object) . (identifierName defineProperty)) (arguments ( (argument (singleExpression this)) , (argument (singleExpression (literal "f"))) , (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName enumerable)) : (singleExpression (literal true))) , (propertyAssignment (propertyName (identifierName configurable)) : (singleExpression (literal true))) , (propertyAssignment (propertyName (identifierName writable)) : (singleExpression (literal true))) , (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 32)))) }))) )))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (singleExpression (singleExpression Object) . (identifierName create)) (arguments ( (argument (singleExpression this)) ))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable currentCount) = (singleExpression (singleExpression count) ++))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable str) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (literal "for (var i = ")) + (singleExpression currentCount)) + (singleExpression (literal "; i < "))) + (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 100))) + (singleExpression currentCount))) ))) + (singleExpression (literal "; ++i)\n"))) + (singleExpression (literal "    o.f\n"))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression eval) (arguments ( (argument (singleExpression str)) )))) (eos ;)))))) }))) (sourceElement (statement (functionDeclaration function foo ( (formalParameterList (formalParameterArg (assignable o))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) = (singleExpression (literal (numericLiteral 42))))) (eos ;)))))) }))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argument (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable o) = (singleExpression (objectLiteral { })))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName __defineSetter__)) (arguments ( (argument (singleExpression (literal "f"))) , (argument (singleExpression setter)) )))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression o)) )))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) != (singleExpression (literal (numericLiteral 32))))) ) (statement (throwStatement throw (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal "Error 1: ")) + (singleExpression (singleExpression o) . (identifierName f)))) ))) (eos ;))))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression foo) (arguments ( (argument (singleExpression o)) )))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) != (singleExpression (literal (numericLiteral 42))))) ) (statement (throwStatement throw (expressionSequence (singleExpression ( (expressionSequence (singleExpression (singleExpression (literal "Error 2: ")) + (singleExpression (singleExpression o) . (identifierName f)))) ))) (eos ;)))))) })))))) <EOF>)