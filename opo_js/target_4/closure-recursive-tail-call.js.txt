(program (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (literal "use strict"))) (eos ;)))) (sourceElement (statement (functionDeclaration function makeClosure ( (formalParameterList (formalParameterArg (assignable x))) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( (formalParameterList (formalParameterArg (assignable f))) )) => (arrowFunctionBody { (functionBody (sourceElements (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression x) == (singleExpression (literal (numericLiteral 42))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression x) = (singleExpression (literal (numericLiteral 0))))) (eos ;))) (statement (returnStatement return (expressionSequence (singleExpression (singleExpression f) (arguments ( (argument (singleExpression f)) )))) (eos ;)))) })) else (statement (returnStatement return (expressionSequence (singleExpression x)) (eos ;)))))))) })))) eos))))) }))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier var) (variableDeclaration (assignable i) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 1000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable g) = (singleExpression (singleExpression makeClosure) (arguments ( (argument (singleExpression (literal (numericLiteral 42)))) ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable h) = (singleExpression (singleExpression makeClosure) (arguments ( (argument (singleExpression (literal (numericLiteral 41)))) ))))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable value) = (singleExpression (singleExpression g) (arguments ( (argument (singleExpression h)) ))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression value) != (singleExpression (literal (numericLiteral 41))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Wrong result, got: ")) + (singleExpression value))) (eos ;)))))) })))))) <EOF>)