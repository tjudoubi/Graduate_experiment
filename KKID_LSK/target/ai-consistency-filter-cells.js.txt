(program (sourceElements (sourceElement (functionDeclaration function get ( (formalParameterList value , prop) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression value) [ (expressionSequence (singleExpression prop)) ])) (eos ;)))))) })) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argumentList (singleExpression get)) )))) (eos ;)))) (sourceElement (functionDeclaration function foo ( (formalParameterList record , key , attribute) ) { (functionBody (sourceElements (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration attrs (initialiser = (singleExpression (singleExpression get) (arguments ( (argumentList (singleExpression this) , (singleExpression (literal 'attrs'))) )))))) (eos ;)))) (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration value (initialiser = (singleExpression (singleExpression get) (arguments ( (argumentList (singleExpression record) , (singleExpression key)) ))))) , (variableDeclaration type (initialiser = (singleExpression (singleExpression attribute) . (identifierName type))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression type)) ) (statement (block { (statementList (statement (variableStatement var (variableDeclarationList (variableDeclaration transform (initialiser = (singleExpression (singleExpression (singleExpression this) . (identifierName transformFor)) (arguments ( (argumentList (singleExpression type)) )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression value) = (singleExpression (singleExpression (singleExpression transform) . (identifierName serialize)) (arguments ( (argumentList (singleExpression value)) ))))) (eos ;)))) }))))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression key) = (singleExpression (singleExpression (singleExpression attrs) && (singleExpression (singleExpression attrs) [ (expressionSequence (singleExpression key)) ])) || (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName keyForAttribute)) ? (singleExpression (singleExpression (singleExpression this) . (identifierName keyForAttribute)) (arguments ( (argumentList (singleExpression key)) ))) : (singleExpression key))) ))))) (eos ;)))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { (propertyNameAndValueList (propertyAssignment (propertyName (identifierName key)) : (singleExpression key)) , (propertyAssignment (propertyName (identifierName value)) : (singleExpression value))) }))) (eos ;)))))) })) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argumentList (singleExpression foo)) )))) (eos ;))))) let i = 0 ; let thisValue = { transformFor : function ( ) { return { serialize : function ( ) { return { } } } } } ; let record = { key : "hello" } ; let record2 = { key : true } ; let key = "key" ; let attribute = { type : "type" } ; for ( ; i < 100000 ; i ++ ) { if ( i % 2 === 0 ) foo . call ( thisValue , record , key , attribute ) ; else foo . call ( thisValue , record2 , key , attribute ) ; })