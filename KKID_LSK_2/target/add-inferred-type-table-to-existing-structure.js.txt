(program (sourceElements (sourceElement (functionDeclaration function foo ( (formalParameterList o) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) + (singleExpression (literal (numericLiteral 1))))) (eos ;)))))) })) (sourceElement (functionDeclaration function bar ( (formalParameterList o , i , v) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) [ (expressionSequence (singleExpression i)) ]) = (singleExpression v))) (eos ;)))))) })) (sourceElement (functionDeclaration function baz ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (objectLiteral { }))) (eos ;)))))) })) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argumentList (singleExpression foo)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argumentList (singleExpression bar)) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression noInline) (arguments ( (argumentList (singleExpression baz)) )))) (eos ;)))) (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration o0 (initialiser = (singleExpression (singleExpression baz) (arguments ( )))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression bar) (arguments ( (argumentList (singleExpression o0) , (singleExpression (literal "f")) , (singleExpression (literal "hello"))) )))) (eos ;)))) (sourceElement (statement (iterationStatement for ( var (variableDeclarationList (variableDeclaration i (initialiser = (singleExpression (literal (numericLiteral 0)))))) ; (expressionSequence (singleExpression (singleExpression i) < (singleExpression (literal (numericLiteral 10000))))) ; (expressionSequence (singleExpression ++ (singleExpression i))) ) (statement (block { (statementList (statement (variableStatement var (variableDeclarationList (variableDeclaration o (initialiser = (singleExpression (singleExpression baz) (arguments ( )))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression o) . (identifierName f)) = (singleExpression (literal (numericLiteral 42))))) (eos ;))) (statement (variableStatement var (variableDeclarationList (variableDeclaration result (initialiser = (singleExpression (singleExpression foo) (arguments ( (argumentList (singleExpression o)) )))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal (numericLiteral 43))))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result in loop: ")) + (singleExpression result))) (eos ;)))))) }))))) (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration result (initialiser = (singleExpression (singleExpression foo) (arguments ( (argumentList (singleExpression o0)) )))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression result) != (singleExpression (literal "hello1")))) ) (statement (throwStatement throw (expressionSequence (singleExpression (singleExpression (literal "Error: bad result at end: ")) + (singleExpression result))) (eos ;))))))) <EOF>)